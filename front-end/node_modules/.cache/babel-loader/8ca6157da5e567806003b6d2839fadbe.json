{"ast":null,"code":"import _slicedToArray from\"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// import React, { Component } from 'react';\n// import Select from 'react-select';\n// import * as d3 from 'd3';\n// import skill_search_pic from '../skill_search_pic.png';\n// import Loader from 'react-loader-spinner';\n// const options = [\n//     {\n//         label: \"Data Engineering\",\n//         options: [\n//             { value: 'data_analyst', label: 'Data Analyst' },\n//             { value: 'data_engineer', label: 'Data Engineer' },\n//             { value: 'data_scientist', label: 'Data Scientist' },\n//             { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n//             { value: 'network_engineer', label: 'Network Engineer' }\n//         ]\n//     },\n//     {\n//         label: \"Financial Engineering\",\n//         options: [\n//             { value: 'financial_engineer', label: 'Financial Engineer' },\n//             { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n//             { value: 'quantitative_finance', label: 'Quantitative Finance' },\n//             { value: 'quantitative_research', label: 'Quantitative Research' },\n//             { value: 'quantitative_trading', label: 'Quantitative Trading' },\n//             { value: 'technology_analyst', label: 'Technology Analyst' }\n//         ]\n//     },\n//     {\n//         label: \"Hardware and Technical Engineering\",\n//         options: [\n//             { value: 'automation_engineer', label: 'Automation Engineer' },\n//             { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n//             { value: 'electrical_engineer', label: 'Electrical Engineer' },\n//             { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n//             { value: 'qa_engineer', label: 'QA Engineer' },\n//             { value: 'systems_engineer', label: 'Systems Engineer' },\n//         ]\n//     },\n//     {\n//         label: \"Software Engineering\",\n//         options: [\n//             { value: 'software_engineer', label: 'Software Engineer' }\n//         ]\n//     }\n// ];\n// export default class SkillSearch extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             selectedOption: null,\n//             chartExists: false,\n//             data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 },\n//             svg: null,\n//             chartWidth: null,\n//             chartHeight: null,\n//             chartArea: null,\n//             bottomAxis: null,\n//             bottomAxisGroup: null,\n//             leftAxis: null,\n//             leftAxisGroup: null,\n//             skills: [],\n//             score: 0,\n//             loading: false\n//         }\n//         this.ref = React.createRef()\n//     }\n//     handleChange = (selectedOption) => {\n//         this.setState({ selectedOption });\n//         console.log(this.state.selectedOption);\n//     }\n//     onClick = () => {\n//         console.log(this.state.selectedOption);\n//         this.getSkills(this.state.selectedOption.value);\n//         d3.select('.skill-search_pic').style('display', 'none');\n//     }\n//     getSkills(keyword) {\n//         this.setState({ loading: true }, () => {\n//             d3.select('.graph').style('display', 'none');\n//             fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n//                 this.setState({\n//                     loading: false,\n//                     skills: output.output\n//                 });\n//                 console.log(\"OUTPUT: \", output)\n//                 d3.select('.graph').style('display', 'inline');\n//                 d3.select('.results').text('The most commonly requested communication skills for this job are: ');\n//                 d3.select('.sidenote').text('**numbers represent how many times each skill appears in our collection of job ads');\n//                 d3.select('.next_steps').style('display', 'inline');\n//                 this.drawChart();\n//             })\n//         })\n//     }\n//     getScore(keyword, resume = null) {\n//         let str = '/score?keyword=' + keyword ? resume : '/score?keyword=' + keyword + '&resume=' + resume;;\n//         fetch(str).then(res => res.json()).then(output => {\n//             this.setState({ score: output.score })\n//             this.setState({ skills: output.skills })\n//         })\n//     }\n//     // ///////////////\n//     // getRandomInt = () => {\n//     //     return Math.floor(Math.random() * 10);\n//     // }\n//     // onClick2 = () => {\n//     //     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n//     //     console.log(this.state.data)\n//     //     // var svg = d3.select(this.ref.current)\n//     //     // svg.style('display', 'none');\n//     // }\n//     // ///////////////\n//     componentDidMount = () => {\n//         this.state.svg = d3.select(this.ref.current)\n//             .append('svg')\n//             .attr(\"class\", \"graph\")\n//             .attr('width', 800)\n//             .attr('height', 350)\n//             .style('display', 'none');\n//         d3.select('.next_steps').style('display', 'none');\n//         const width = this.state.svg.attr('width');\n//         const height = this.state.svg.attr('height');\n//         const margin = { top: 0, right: 10, bottom: 10, left: 200 };\n//         this.setState({ chartWidth: width - margin.left - margin.right });\n//         this.setState({ chartHeight: height - margin.top - margin.bottom });\n//         const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n//         this.setState({\n//             chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\")\n//                 .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//         });\n//         this.setState({ bottomAxis: d3.axisBottom() });\n//         this.setState({\n//             bottomAxisGroup: annotations.append(\"g\")\n//                 .attr(\"class\", \"x axis\")\n//                 .attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n//         });\n//         this.setState({ leftAxis: d3.axisLeft() });\n//         this.setState({\n//             leftAxisGroup: annotations.append(\"g\")\n//                 .attr(\"class\", \"y axis\")\n//                 .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n//         });\n//     }\n//     drawChart = () => {\n//         console.log(\"SKILLS!!!\")\n//         console.log(this.state.skills)\n//         var res = []\n//         var i = 1.1\n//         console.log(\"ENTRIES!!!\")\n//         var entries = Object.entries(this.state.skills);\n//         // console.log(entries);\n//         console.log(entries.sort(function (a, b) { return b[1] - a[1] }));\n//         var count = 0;\n//         // for (const [key, value] of Object.entries(this.state.skills)) {\n//         for (const [key, value] of entries) {\n//             if (count >= 5) {\n//                 break;\n//             }\n//             var val = value;\n//             var label = value;\n//             if (value > 200) {\n//                 val = 200;\n//                 label = 'over 200';\n//             }\n//             i = i - .15\n//             res.push({\n//                 'skill': key,\n//                 'frequency': val,\n//                 'opacity': i,\n//                 'label': label\n//             })\n//             count = count + 1;\n//         }\n//         const skillExtent = d3.map(res, d => d.skill)\n//         const frequencyExtent = [0, d3.max(res, d => d.frequency)]\n//         const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight])\n//             .padding(0.05);\n//         this.state.leftAxis.scale(skillScale).tickSize(0);\n//         this.state.leftAxisGroup.transition().call(this.state.leftAxis);\n//         const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n//         this.state.chartArea.selectAll('rect.bar').data(res)\n//             .join(enter => enter.append('rect')\n//                 .attr('class', 'bar')\n//                 .attr(\"fill\", \"#FFC85C\")\n//                 .attr(\"x\", d => 0)\n//                 .attr(\"y\", d => skillScale(d.skill))\n//                 .attr(\"width\", d => frequencyScale(d.frequency))\n//                 .attr(\"height\", skillScale.bandwidth())\n//                 .attr(\"opacity\", d => d.opacity),\n//                 update => update.call(update => update.transition()\n//                     .attr(\"fill\", \"#FFC85C\")\n//                     .attr(\"x\", d => 0)\n//                     .attr(\"y\", d => skillScale(d.skill))\n//                     .attr(\"width\", d => frequencyScale(d.frequency))\n//                     .attr(\"height\", skillScale.bandwidth()))\n//                     .attr(\"opacity\", d => d.opacity));\n//         this.state.chartArea.selectAll('text.label').data(res)\n//             .join(enter => enter.append('text')\n//                 .attr('class', 'label')\n//                 .attr(\"text-anchor\", \"end\")\n//                 .attr(\"font-size\", \"15px\")\n//                 .attr(\"x\", d => {\n//                     if (frequencyScale(d.frequency) <= 25) {\n//                         return frequencyScale(d.frequency) + 15;\n//                     }\n//                     else {\n//                         return frequencyScale(d.frequency) - 10;\n//                     }\n//                 })\n//                 .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n//                 .text(d => {\n//                     if (d.frequency === 0) { return \"\"; }\n//                     else { return d.label; }\n//                 }),\n//                 update => update.call(update => update.transition()\n//                     .attr('class', 'label')\n//                     .attr(\"text-anchor\", \"end\")\n//                     .attr(\"font-size\", \"15px\")\n//                     .attr(\"x\", d => {\n//                         if (frequencyScale(d.frequency) <= 25) {\n//                             return frequencyScale(d.frequency) + 15;\n//                         }\n//                         else {\n//                             return frequencyScale(d.frequency) - 10;\n//                         }\n//                     })\n//                     .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n//                     .text(d => {\n//                         if (d.frequency === 0) { return \"\"; }\n//                         else { return d.label; }\n//                     })));\n//     }\n//     render() {\n//         console.log(this.state);\n//         return (\n//             <div className=\"skill-search-container\" >\n//                 <div className=\"header\">\n//                     <h1 className=\"title\">Select an engineering job you're interested in!</h1>\n//                     <p>\n//                         Choose from our selection of 18 engineering job titles in 4 engineering job categories, and we'll show you the top five\n//                         most commonly requested communication skills for that job based on 5994 different job ads from our database. Use the search bar below to begin!\n//                     </p>\n//                 </div>\n//                 <div className=\"skill-search\">\n//                     <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n//                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n//                     >Search</button>\n//                 </div>\n//                 {/* <button className=\"change1\" onClick={this.onClick2}>change1</button> */}\n//                 <center><img src={skill_search_pic} className=\"skill-search_pic\" alt=\"skill search picture\" /></center>\n//                 {this.state.loading ? <Loader type=\"ThreeDots\" color=\"#027A8B\" height=\"100\" width=\"100\" /> : <p className=\"results\"></p>}\n//                 <div className=\"chart\" ref={this.ref} />\n//                 {this.state.loading ? <p className=\"sidenote\"></p> : <p className=\"sidenote\"></p>}\n//                 {this.state.loading ?\n//                     <div className=\"next_steps\" /> :\n//                     <div className=\"next_steps\">\n//                         <h3>Next Steps</h3>\n//                         <p className=\"recommendations\">Based on these results, you can focus on improving these skills to increase your chances of success in this field! Head over to our <a href=\"./resume-analysis\">Resume Analysis</a> page to determine how well your resume demonstrates these communication skills and to see which skills you are lacking in.</p>\n//                     </div>}\n//             </div>\n//         )\n//     }\n// }\nimport React,{Component}from'react';import Select from'react-select';import*as d3 from'd3';import skill_search_pic from'../skill_search_pic.png';import Loader from'react-loader-spinner';var options=[{label:\"Data Engineering\",options:[{value:'data_analyst',label:'Data Analyst'},{value:'data_engineer',label:'Data Engineer'},{value:'data_scientist',label:'Data Scientist'},{value:'machine_learning_engineer',label:'Machine Learning Engineer'},{value:'network_engineer',label:'Network Engineer'}]},{label:\"Financial Engineering\",options:[{value:'financial_engineer',label:'Financial Engineer'},{value:'quantitative_analyst',label:'Quantitative Analyst'},{value:'quantitative_finance',label:'Quantitative Finance'},{value:'quantitative_research',label:'Quantitative Research'},{value:'quantitative_trading',label:'Quantitative Trading'},{value:'technology_analyst',label:'Technology Analyst'}]},{label:\"Hardware and Technical Engineering\",options:[{value:'automation_engineer',label:'Automation Engineer'},{value:'computer_hardware_engineer',label:'Computer Hardware Engineer'},{value:'electrical_engineer',label:'Electrical Engineer'},{value:'mechanical_engineer',label:'Mechanical Engineer'},{value:'qa_engineer',label:'QA Engineer'},{value:'systems_engineer',label:'Systems Engineer'}]},{label:\"Software Engineering\",options:[{value:'software_engineer',label:'Software Engineer'}]}];var SkillSearch=/*#__PURE__*/function(_Component){_inherits(SkillSearch,_Component);var _super=_createSuper(SkillSearch);function SkillSearch(){var _this;_classCallCheck(this,SkillSearch);_this=_super.call(this);_this.handleChange=function(selectedOption){_this.setState({selectedOption:selectedOption});console.log(_this.state.selectedOption);};_this.onClick=function(){console.log(_this.state.selectedOption);_this.getSkills(_this.state.selectedOption.value);d3.select('.skill-search_pic').style('display','none');};_this.componentDidMount=function(){_this.state.svg=d3.select(_this.ref.current).append('svg').attr(\"class\",\"graph\").attr('width',800).attr('height',350).style('display','none');d3.select('.next_steps').style('display','none');d3.select('.sidenote').style('display','none');var width=_this.state.svg.attr('width');var height=_this.state.svg.attr('height');var margin={top:0,right:10,bottom:10,left:200};_this.setState({chartWidth:width-margin.left-margin.right});_this.setState({chartHeight:height-margin.top-margin.bottom});var annotations=_this.state.svg.append(\"g\").attr(\"id\",\"annotations\");_this.setState({chartArea:_this.state.svg.append(\"g\").attr(\"id\",\"chart\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\")});_this.setState({bottomAxis:d3.axisBottom()});_this.setState({bottomAxisGroup:annotations.append(\"g\").attr(\"class\",\"x axis\").attr(\"transform\",\"translate(\".concat(margin.left,\",\").concat(300+margin.top,\")\"))});_this.setState({leftAxis:d3.axisLeft()});_this.setState({leftAxisGroup:annotations.append(\"g\").attr(\"class\",\"y axis\").attr(\"transform\",\"translate(\".concat(margin.left-10,\",\").concat(margin.top,\")\"))});};_this.drawChart=function(){console.log(\"SKILLS!!!\");console.log(_this.state.skills);var res=[];var i=1.1;console.log(\"ENTRIES!!!\");var entries=Object.entries(_this.state.skills);// console.log(entries);\nconsole.log(entries.sort(function(a,b){return b[1]-a[1];}));var count=0;// for (const [key, value] of Object.entries(this.state.skills)) {\nfor(var _i=0,_entries=entries;_i<_entries.length;_i++){var _entries$_i=_slicedToArray(_entries[_i],2),key=_entries$_i[0],value=_entries$_i[1];if(count>=5){break;}var val=value;var label=value;if(value>200){val=200;label='over 200 ('+value+')';}i=i-.15;res.push({'skill':key,'frequency':val,'opacity':i,'label':label});count=count+1;}var skillExtent=d3.map(res,function(d){return d.skill;});var frequencyExtent=[0,d3.max(res,function(d){return d.frequency;})];var skillScale=d3.scaleBand().domain(skillExtent).range([0,_this.state.chartHeight]).padding(0.05);_this.state.leftAxis.scale(skillScale).tickSize(0);_this.state.leftAxisGroup.transition().call(_this.state.leftAxis);var frequencyScale=d3.scaleLinear().domain(frequencyExtent).range([0,_this.state.chartWidth]);_this.state.chartArea.selectAll('rect.bar').data(res).join(function(enter){return enter.append('rect').attr('class','bar').attr(\"fill\",\"#FFC85C\").attr(\"x\",function(d){return 0;}).attr(\"y\",function(d){return skillScale(d.skill);}).attr(\"width\",function(d){return frequencyScale(d.frequency);}).attr(\"height\",skillScale.bandwidth()).attr(\"opacity\",function(d){return d.opacity;});},function(update){return update.call(function(update){return update.transition().attr(\"fill\",\"#FFC85C\").attr(\"x\",function(d){return 0;}).attr(\"y\",function(d){return skillScale(d.skill);}).attr(\"width\",function(d){return frequencyScale(d.frequency);}).attr(\"height\",skillScale.bandwidth());}).attr(\"opacity\",function(d){return d.opacity;});});_this.state.chartArea.selectAll('text.label').data(res).join(function(enter){return enter.append('text').attr('class','label').attr(\"text-anchor\",\"end\").attr(\"font-size\",\"15px\").attr(\"x\",function(d){if(frequencyScale(d.frequency)<=25){return frequencyScale(d.frequency)+15;}else{return frequencyScale(d.frequency)-10;}}).attr('y',function(d){return skillScale(d.skill)+skillScale.bandwidth()/2+5;}).attr('fill',function(d){if(d.frequency===200){return'red';}else{return'#027A8B';}}).text(function(d){if(d.frequency===0){return\"\";}else{return d.label;}});},function(update){return update.call(function(update){return update.transition().attr('class','label').attr(\"text-anchor\",\"end\").attr(\"font-size\",\"15px\").attr(\"x\",function(d){if(frequencyScale(d.frequency)<=25){return frequencyScale(d.frequency)+15;}else{return frequencyScale(d.frequency)-10;}}).attr('y',function(d){return skillScale(d.skill)+skillScale.bandwidth()/2+5;}).attr('fill',function(d){if(d.frequency===200){return'red';}else{return'#027A8B';}}).text(function(d){if(d.frequency===0){return\"\";}else{return d.label;}});});});};_this.state={selectedOption:null,chartExists:false,data:{\"skill1\":5,\"skill2\":8,\"skill3\":4,\"skill4\":1,\"skill5\":9},svg:null,chartWidth:null,chartHeight:null,chartArea:null,bottomAxis:null,bottomAxisGroup:null,leftAxis:null,leftAxisGroup:null,skills:[],score:0,loading:false};_this.ref=React.createRef();return _this;}_createClass(SkillSearch,[{key:\"getSkills\",value:function getSkills(keyword){var _this2=this;this.setState({loading:true},function(){d3.select('.graph').style('display','none');fetch('/skills?keyword='+keyword).then(function(res){return res.json();}).then(function(output){_this2.setState({loading:false,skills:output.output});console.log(\"OUTPUT: \",output);d3.select('.graph').style('display','inline');d3.select('.results').text('The most commonly requested communication skills for this job are: ');// d3.select('.sidenote').text('**numbers represent how many times each skill appears in our collection of job ads');\nd3.select('.sidenote').style('display','inline');d3.select('.next_steps').style('display','inline');_this2.drawChart();window.scrollTo(0,document.body.scrollHeight);});});}// ///////////////\n// getRandomInt = () => {\n//     return Math.floor(Math.random() * 10);\n// }\n// onClick2 = () => {\n//     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n//     console.log(this.state.data)\n//     // var svg = d3.select(this.ref.current)\n//     // svg.style('display', 'none');\n// }\n// ///////////////\n},{key:\"render\",value:function render(){console.log(this.state);return/*#__PURE__*/React.createElement(\"div\",{className:\"skill-search-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"title\"},\"Select an engineering job you're interested in!\"),/*#__PURE__*/React.createElement(\"p\",null,\"Choose from our selection of 18 engineering job titles in 4 different categories, and we'll show you the most commonly requested communication skills for that job based on our database of job ads. Use the search bar below to begin!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"skill-search\"},/*#__PURE__*/React.createElement(Select,{className:\"searchbar\",options:options,isClearable:true,onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",class:\"btn btn-outline-primary\",onClick:this.onClick,disabled:!this.state.selectedOption},\"Search\")),/*#__PURE__*/React.createElement(\"center\",null,/*#__PURE__*/React.createElement(\"img\",{src:skill_search_pic,className:\"skill-search_pic\",alt:\"skill search picture\"})),this.state.loading?/*#__PURE__*/React.createElement(Loader,{type:\"ThreeDots\",color:\"#027A8B\",height:\"100\",width:\"100\"}):/*#__PURE__*/React.createElement(\"p\",{className:\"results\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"chart\",ref:this.ref}),this.state.loading?/*#__PURE__*/React.createElement(\"p\",{className:\"sidenote\"}):/*#__PURE__*/React.createElement(\"p\",{className:\"sidenote\"},\"**numbers represent how many times each skill appears in our collection of job ads\"),this.state.loading?/*#__PURE__*/React.createElement(\"div\",{className:\"next_steps\",id:\"page\"}):/*#__PURE__*/React.createElement(\"div\",{className:\"next_steps\",id:\"page\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Next Steps\"),/*#__PURE__*/React.createElement(\"p\",{className:\"recommendations\"},\"Based on these results, you can focus on improving these skills to increase your chances of success in this field! Head over to our \",/*#__PURE__*/React.createElement(\"a\",{href:\"./resume-analysis\"},\"Resume Analysis\"),\" page to determine how well your resume demonstrates these communication skills and to see which skills you are lacking in.\")));}}]);return SkillSearch;}(Component);export{SkillSearch as default};","map":{"version":3,"sources":["/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/src/components/SkillSearch.js"],"names":["React","Component","Select","d3","skill_search_pic","Loader","options","label","value","SkillSearch","handleChange","selectedOption","setState","console","log","state","onClick","getSkills","select","style","componentDidMount","svg","ref","current","append","attr","width","height","margin","top","right","bottom","left","chartWidth","chartHeight","annotations","chartArea","bottomAxis","axisBottom","bottomAxisGroup","leftAxis","axisLeft","leftAxisGroup","drawChart","skills","res","i","entries","Object","sort","a","b","count","key","val","push","skillExtent","map","d","skill","frequencyExtent","max","frequency","skillScale","scaleBand","domain","range","padding","scale","tickSize","transition","call","frequencyScale","scaleLinear","selectAll","data","join","enter","bandwidth","opacity","update","text","chartExists","score","loading","createRef","keyword","fetch","then","json","output","window","scrollTo","document","body","scrollHeight"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import Select from 'react-select';\n// import * as d3 from 'd3';\n// import skill_search_pic from '../skill_search_pic.png';\n// import Loader from 'react-loader-spinner';\n\n// const options = [\n//     {\n//         label: \"Data Engineering\",\n//         options: [\n//             { value: 'data_analyst', label: 'Data Analyst' },\n//             { value: 'data_engineer', label: 'Data Engineer' },\n//             { value: 'data_scientist', label: 'Data Scientist' },\n//             { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n//             { value: 'network_engineer', label: 'Network Engineer' }\n//         ]\n//     },\n//     {\n//         label: \"Financial Engineering\",\n//         options: [\n//             { value: 'financial_engineer', label: 'Financial Engineer' },\n//             { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n//             { value: 'quantitative_finance', label: 'Quantitative Finance' },\n//             { value: 'quantitative_research', label: 'Quantitative Research' },\n//             { value: 'quantitative_trading', label: 'Quantitative Trading' },\n//             { value: 'technology_analyst', label: 'Technology Analyst' }\n//         ]\n//     },\n//     {\n//         label: \"Hardware and Technical Engineering\",\n//         options: [\n//             { value: 'automation_engineer', label: 'Automation Engineer' },\n//             { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n//             { value: 'electrical_engineer', label: 'Electrical Engineer' },\n//             { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n//             { value: 'qa_engineer', label: 'QA Engineer' },\n//             { value: 'systems_engineer', label: 'Systems Engineer' },\n//         ]\n//     },\n//     {\n//         label: \"Software Engineering\",\n//         options: [\n//             { value: 'software_engineer', label: 'Software Engineer' }\n//         ]\n//     }\n// ];\n\n// export default class SkillSearch extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             selectedOption: null,\n//             chartExists: false,\n\n//             data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 },\n\n//             svg: null,\n//             chartWidth: null,\n//             chartHeight: null,\n//             chartArea: null,\n//             bottomAxis: null,\n//             bottomAxisGroup: null,\n//             leftAxis: null,\n//             leftAxisGroup: null,\n\n//             skills: [],\n//             score: 0,\n\n//             loading: false\n\n//         }\n//         this.ref = React.createRef()\n//     }\n\n//     handleChange = (selectedOption) => {\n//         this.setState({ selectedOption });\n//         console.log(this.state.selectedOption);\n//     }\n\n\n//     onClick = () => {\n//         console.log(this.state.selectedOption);\n//         this.getSkills(this.state.selectedOption.value);\n//         d3.select('.skill-search_pic').style('display', 'none');\n\n//     }\n\n//     getSkills(keyword) {\n//         this.setState({ loading: true }, () => {\n//             d3.select('.graph').style('display', 'none');\n//             fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n//                 this.setState({\n//                     loading: false,\n//                     skills: output.output\n//                 });\n//                 console.log(\"OUTPUT: \", output)\n//                 d3.select('.graph').style('display', 'inline');\n//                 d3.select('.results').text('The most commonly requested communication skills for this job are: ');\n//                 d3.select('.sidenote').text('**numbers represent how many times each skill appears in our collection of job ads');\n//                 d3.select('.next_steps').style('display', 'inline');\n//                 this.drawChart();\n//             })\n//         })\n//     }\n\n//     getScore(keyword, resume = null) {\n//         let str = '/score?keyword=' + keyword ? resume : '/score?keyword=' + keyword + '&resume=' + resume;;\n\n//         fetch(str).then(res => res.json()).then(output => {\n//             this.setState({ score: output.score })\n//             this.setState({ skills: output.skills })\n//         })\n//     }\n\n//     // ///////////////\n//     // getRandomInt = () => {\n//     //     return Math.floor(Math.random() * 10);\n//     // }\n\n//     // onClick2 = () => {\n//     //     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n//     //     console.log(this.state.data)\n//     //     // var svg = d3.select(this.ref.current)\n//     //     // svg.style('display', 'none');\n//     // }\n//     // ///////////////\n\n//     componentDidMount = () => {\n\n//         this.state.svg = d3.select(this.ref.current)\n//             .append('svg')\n//             .attr(\"class\", \"graph\")\n//             .attr('width', 800)\n//             .attr('height', 350)\n//             .style('display', 'none');\n\n//         d3.select('.next_steps').style('display', 'none');\n\n//         const width = this.state.svg.attr('width');\n//         const height = this.state.svg.attr('height');\n\n//         const margin = { top: 0, right: 10, bottom: 10, left: 200 };\n//         this.setState({ chartWidth: width - margin.left - margin.right });\n//         this.setState({ chartHeight: height - margin.top - margin.bottom });\n\n//         const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n//         this.setState({\n//             chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\")\n//                 .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n//         });\n\n//         this.setState({ bottomAxis: d3.axisBottom() });\n//         this.setState({\n//             bottomAxisGroup: annotations.append(\"g\")\n//                 .attr(\"class\", \"x axis\")\n//                 .attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n//         });\n\n//         this.setState({ leftAxis: d3.axisLeft() });\n//         this.setState({\n//             leftAxisGroup: annotations.append(\"g\")\n//                 .attr(\"class\", \"y axis\")\n//                 .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n//         });\n\n//     }\n\n//     drawChart = () => {\n//         console.log(\"SKILLS!!!\")\n//         console.log(this.state.skills)\n//         var res = []\n//         var i = 1.1\n//         console.log(\"ENTRIES!!!\")\n//         var entries = Object.entries(this.state.skills);\n//         // console.log(entries);\n//         console.log(entries.sort(function (a, b) { return b[1] - a[1] }));\n\n//         var count = 0;\n//         // for (const [key, value] of Object.entries(this.state.skills)) {\n//         for (const [key, value] of entries) {\n//             if (count >= 5) {\n//                 break;\n//             }\n//             var val = value;\n//             var label = value;\n//             if (value > 200) {\n//                 val = 200;\n//                 label = 'over 200';\n//             }\n//             i = i - .15\n//             res.push({\n//                 'skill': key,\n//                 'frequency': val,\n//                 'opacity': i,\n//                 'label': label\n//             })\n//             count = count + 1;\n//         }\n\n\n//         const skillExtent = d3.map(res, d => d.skill)\n\n//         const frequencyExtent = [0, d3.max(res, d => d.frequency)]\n\n//         const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight])\n//             .padding(0.05);\n\n\n//         this.state.leftAxis.scale(skillScale).tickSize(0);\n//         this.state.leftAxisGroup.transition().call(this.state.leftAxis);\n\n//         const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n\n//         this.state.chartArea.selectAll('rect.bar').data(res)\n//             .join(enter => enter.append('rect')\n//                 .attr('class', 'bar')\n//                 .attr(\"fill\", \"#FFC85C\")\n//                 .attr(\"x\", d => 0)\n//                 .attr(\"y\", d => skillScale(d.skill))\n//                 .attr(\"width\", d => frequencyScale(d.frequency))\n//                 .attr(\"height\", skillScale.bandwidth())\n//                 .attr(\"opacity\", d => d.opacity),\n//                 update => update.call(update => update.transition()\n//                     .attr(\"fill\", \"#FFC85C\")\n//                     .attr(\"x\", d => 0)\n//                     .attr(\"y\", d => skillScale(d.skill))\n//                     .attr(\"width\", d => frequencyScale(d.frequency))\n//                     .attr(\"height\", skillScale.bandwidth()))\n//                     .attr(\"opacity\", d => d.opacity));\n\n//         this.state.chartArea.selectAll('text.label').data(res)\n//             .join(enter => enter.append('text')\n//                 .attr('class', 'label')\n//                 .attr(\"text-anchor\", \"end\")\n//                 .attr(\"font-size\", \"15px\")\n//                 .attr(\"x\", d => {\n//                     if (frequencyScale(d.frequency) <= 25) {\n//                         return frequencyScale(d.frequency) + 15;\n//                     }\n//                     else {\n//                         return frequencyScale(d.frequency) - 10;\n//                     }\n//                 })\n//                 .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n//                 .text(d => {\n//                     if (d.frequency === 0) { return \"\"; }\n//                     else { return d.label; }\n//                 }),\n//                 update => update.call(update => update.transition()\n//                     .attr('class', 'label')\n//                     .attr(\"text-anchor\", \"end\")\n//                     .attr(\"font-size\", \"15px\")\n//                     .attr(\"x\", d => {\n//                         if (frequencyScale(d.frequency) <= 25) {\n//                             return frequencyScale(d.frequency) + 15;\n//                         }\n//                         else {\n//                             return frequencyScale(d.frequency) - 10;\n//                         }\n//                     })\n//                     .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n//                     .text(d => {\n//                         if (d.frequency === 0) { return \"\"; }\n//                         else { return d.label; }\n//                     })));\n//     }\n\n//     render() {\n//         console.log(this.state);\n\n//         return (\n//             <div className=\"skill-search-container\" >\n//                 <div className=\"header\">\n//                     <h1 className=\"title\">Select an engineering job you're interested in!</h1>\n//                     <p>\n//                         Choose from our selection of 18 engineering job titles in 4 engineering job categories, and we'll show you the top five\n//                         most commonly requested communication skills for that job based on 5994 different job ads from our database. Use the search bar below to begin!\n//                     </p>\n//                 </div>\n//                 <div className=\"skill-search\">\n//                     <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n//                     <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n//                     >Search</button>\n//                 </div>\n//                 {/* <button className=\"change1\" onClick={this.onClick2}>change1</button> */}\n//                 <center><img src={skill_search_pic} className=\"skill-search_pic\" alt=\"skill search picture\" /></center>\n//                 {this.state.loading ? <Loader type=\"ThreeDots\" color=\"#027A8B\" height=\"100\" width=\"100\" /> : <p className=\"results\"></p>}\n//                 <div className=\"chart\" ref={this.ref} />\n//                 {this.state.loading ? <p className=\"sidenote\"></p> : <p className=\"sidenote\"></p>}\n//                 {this.state.loading ?\n//                     <div className=\"next_steps\" /> :\n//                     <div className=\"next_steps\">\n//                         <h3>Next Steps</h3>\n//                         <p className=\"recommendations\">Based on these results, you can focus on improving these skills to increase your chances of success in this field! Head over to our <a href=\"./resume-analysis\">Resume Analysis</a> page to determine how well your resume demonstrates these communication skills and to see which skills you are lacking in.</p>\n//                     </div>}\n//             </div>\n//         )\n//     }\n// }\n\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport skill_search_pic from '../skill_search_pic.png';\nimport Loader from 'react-loader-spinner';\n\nconst options = [\n    {\n        label: \"Data Engineering\",\n        options: [\n            { value: 'data_analyst', label: 'Data Analyst' },\n            { value: 'data_engineer', label: 'Data Engineer' },\n            { value: 'data_scientist', label: 'Data Scientist' },\n            { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n            { value: 'network_engineer', label: 'Network Engineer' }\n        ]\n    },\n    {\n        label: \"Financial Engineering\",\n        options: [\n            { value: 'financial_engineer', label: 'Financial Engineer' },\n            { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n            { value: 'quantitative_finance', label: 'Quantitative Finance' },\n            { value: 'quantitative_research', label: 'Quantitative Research' },\n            { value: 'quantitative_trading', label: 'Quantitative Trading' },\n            { value: 'technology_analyst', label: 'Technology Analyst' }\n        ]\n    },\n    {\n        label: \"Hardware and Technical Engineering\",\n        options: [\n            { value: 'automation_engineer', label: 'Automation Engineer' },\n            { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n            { value: 'electrical_engineer', label: 'Electrical Engineer' },\n            { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n            { value: 'qa_engineer', label: 'QA Engineer' },\n            { value: 'systems_engineer', label: 'Systems Engineer' },\n        ]\n    },\n    {\n        label: \"Software Engineering\",\n        options: [\n            { value: 'software_engineer', label: 'Software Engineer' }\n        ]\n    }\n];\n\nexport default class SkillSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedOption: null,\n            chartExists: false,\n\n            data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 },\n\n            svg: null,\n            chartWidth: null,\n            chartHeight: null,\n            chartArea: null,\n            bottomAxis: null,\n            bottomAxisGroup: null,\n            leftAxis: null,\n            leftAxisGroup: null,\n\n            skills: [],\n            score: 0,\n\n            loading: false\n\n        }\n        this.ref = React.createRef()\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        this.getSkills(this.state.selectedOption.value);\n        d3.select('.skill-search_pic').style('display', 'none');\n\n    }\n\n    getSkills(keyword) {\n        this.setState({ loading: true }, () => {\n            d3.select('.graph').style('display', 'none');\n            fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n                this.setState({\n                    loading: false,\n                    skills: output.output\n                });\n                console.log(\"OUTPUT: \", output)\n                d3.select('.graph').style('display', 'inline');\n                d3.select('.results').text('The most commonly requested communication skills for this job are: ');\n                // d3.select('.sidenote').text('**numbers represent how many times each skill appears in our collection of job ads');\n                d3.select('.sidenote').style('display', 'inline')\n                d3.select('.next_steps').style('display', 'inline');\n                this.drawChart();\n                window.scrollTo(0, document.body.scrollHeight);\n            })\n        })\n    }\n\n    // ///////////////\n    // getRandomInt = () => {\n    //     return Math.floor(Math.random() * 10);\n    // }\n\n    // onClick2 = () => {\n    //     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n    //     console.log(this.state.data)\n    //     // var svg = d3.select(this.ref.current)\n    //     // svg.style('display', 'none');\n    // }\n    // ///////////////\n\n    componentDidMount = () => {\n\n        this.state.svg = d3.select(this.ref.current)\n            .append('svg')\n            .attr(\"class\", \"graph\")\n            .attr('width', 800)\n            .attr('height', 350)\n            .style('display', 'none');\n\n        d3.select('.next_steps').style('display', 'none');\n        d3.select('.sidenote').style('display', 'none');\n\n        const width = this.state.svg.attr('width');\n        const height = this.state.svg.attr('height');\n\n        const margin = { top: 0, right: 10, bottom: 10, left: 200 };\n        this.setState({ chartWidth: width - margin.left - margin.right });\n        this.setState({ chartHeight: height - margin.top - margin.bottom });\n\n        const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n        this.setState({\n            chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        });\n\n        this.setState({ bottomAxis: d3.axisBottom() });\n        this.setState({\n            bottomAxisGroup: annotations.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n        });\n\n        this.setState({ leftAxis: d3.axisLeft() });\n        this.setState({\n            leftAxisGroup: annotations.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n        });\n\n    }\n\n    drawChart = () => {\n        console.log(\"SKILLS!!!\")\n        console.log(this.state.skills)\n        var res = []\n        var i = 1.1\n        console.log(\"ENTRIES!!!\")\n        var entries = Object.entries(this.state.skills);\n        // console.log(entries);\n        console.log(entries.sort(function (a, b) { return b[1] - a[1] }));\n\n        var count = 0;\n        // for (const [key, value] of Object.entries(this.state.skills)) {\n        for (const [key, value] of entries) {\n            if (count >= 5) {\n                break;\n            }\n            var val = value;\n            var label = value;\n            if (value > 200) {\n                val = 200;\n                label = 'over 200 (' + value + ')';\n            }\n            i = i - .15\n            res.push({\n                'skill': key,\n                'frequency': val,\n                'opacity': i,\n                'label': label\n            })\n            count = count + 1;\n        }\n\n\n        const skillExtent = d3.map(res, d => d.skill)\n\n        const frequencyExtent = [0, d3.max(res, d => d.frequency)]\n\n        const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight])\n            .padding(0.05);\n\n\n        this.state.leftAxis.scale(skillScale).tickSize(0);\n        this.state.leftAxisGroup.transition().call(this.state.leftAxis);\n\n        const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n\n        this.state.chartArea.selectAll('rect.bar').data(res)\n            .join(enter => enter.append('rect')\n                .attr('class', 'bar')\n                .attr(\"fill\", \"#FFC85C\")\n                .attr(\"x\", d => 0)\n                .attr(\"y\", d => skillScale(d.skill))\n                .attr(\"width\", d => frequencyScale(d.frequency))\n                .attr(\"height\", skillScale.bandwidth())\n                .attr(\"opacity\", d => d.opacity),\n                update => update.call(update => update.transition()\n                    .attr(\"fill\", \"#FFC85C\")\n                    .attr(\"x\", d => 0)\n                    .attr(\"y\", d => skillScale(d.skill))\n                    .attr(\"width\", d => frequencyScale(d.frequency))\n                    .attr(\"height\", skillScale.bandwidth()))\n                    .attr(\"opacity\", d => d.opacity));\n\n        this.state.chartArea.selectAll('text.label').data(res)\n            .join(enter => enter.append('text')\n                .attr('class', 'label')\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"x\", d => {\n                    if (frequencyScale(d.frequency) <= 25) {\n                        return frequencyScale(d.frequency) + 15;\n                    }\n                    else {\n                        return frequencyScale(d.frequency) - 10;\n                    }\n                })\n                .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                .attr('fill', d => {\n                    if (d.frequency === 200) {\n                        return 'red';\n                    }\n                    else {\n                        return '#027A8B';\n                    }\n                })\n                .text(d => {\n                    if (d.frequency === 0) { return \"\"; }\n                    else { return d.label; }\n                }),\n                update => update.call(update => update.transition()\n                    .attr('class', 'label')\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"font-size\", \"15px\")\n                    .attr(\"x\", d => {\n                        if (frequencyScale(d.frequency) <= 25) {\n                            return frequencyScale(d.frequency) + 15;\n                        }\n                        else {\n                            return frequencyScale(d.frequency) - 10;\n                        }\n                    })\n                    .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                    .attr('fill', d => {\n                        if (d.frequency === 200) {\n                            return 'red';\n                        }\n                        else {\n                            return '#027A8B';\n                        }\n                    })\n                    .text(d => {\n                        if (d.frequency === 0) { return \"\"; }\n                        else { return d.label; }\n                    })));\n    }\n\n    render() {\n        console.log(this.state);\n\n        return (\n            <div className=\"skill-search-container\">\n                <div className=\"header\">\n                    <h1 className=\"title\">Select an engineering job you're interested in!</h1>\n                    <p>\n                        Choose from our selection of 18 engineering job titles in 4 different categories, and we'll show you the\n                        most commonly requested communication skills for that job based on our database of job ads.\n                        Use the search bar below to begin!\n                    </p>\n                </div>\n                <div className=\"skill-search\">\n                    <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                    <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n                    >Search</button>\n                </div>\n                {/* <button className=\"change1\" onClick={this.onClick2}>change1</button> */}\n                <center><img src={skill_search_pic} className=\"skill-search_pic\" alt=\"skill search picture\" /></center>\n                {this.state.loading ? <Loader type=\"ThreeDots\" color=\"#027A8B\" height=\"100\" width=\"100\" /> : <p className=\"results\"></p>}\n                <div className=\"chart\" ref={this.ref} />\n                {this.state.loading ? <p className=\"sidenote\"></p> : <p className=\"sidenote\">**numbers represent how many times each skill appears in our collection of job ads</p>}\n                {this.state.loading ?\n                    <div className=\"next_steps\" id=\"page\" /> :\n                    <div className=\"next_steps\" id=\"page\" >\n                        <h3>Next Steps</h3>\n                        <p className=\"recommendations\">Based on these results, you can focus on improving these skills to increase your chances of success in this field! Head over to our <a href=\"./resume-analysis\">Resume Analysis</a> page to determine how well your resume demonstrates these communication skills and to see which skills you are lacking in.</p>\n                    </div>}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}