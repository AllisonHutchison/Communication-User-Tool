{"ast":null,"code":"var _jsxFileName = \"/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/src/components/AnalyticsResumeAnalysisContainer.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\"; // import ResumeAnalysis from \"./ResumeAnalysis\";\n\nimport Analytics from \"./Analytics\";\nconst jobInfoOptions = [{\n  value: \"job_title\",\n  label: \"Job Title\"\n}, {\n  value: \"job_description\",\n  label: \"Job Description\"\n}];\nconst jobTitleOptions = [{\n  value: \"automation_engineer\",\n  label: \"Automation Engineer\"\n}, {\n  value: \"computer_hardware_engineer\",\n  label: \"Computer Hardware Engineer\"\n}, {\n  value: \"data_analyst\",\n  label: \"Data Analyst\"\n}, {\n  value: \"data_engineer\",\n  label: \"Data Engineer\"\n}, {\n  value: \"data_scientist\",\n  label: \"Data Scientist\"\n}, {\n  value: \"electrical_engineer\",\n  label: \"Electrical Engineer\"\n}, {\n  value: \"financial_engineer\",\n  label: \"Financial Engineer\"\n}, {\n  value: \"machine_learning_engineer\",\n  label: \"Machine Learning Engineer\"\n}, {\n  value: \"mechanical_engineer\",\n  label: \"Mechanical Engineer\"\n}, {\n  value: \"network_engineer\",\n  label: \"Network Engineer\"\n}, {\n  value: \"qa_engineer\",\n  label: \"QA Engineer\"\n}, {\n  value: \"quantitative_analyst\",\n  label: \"Quantitative Analyst\"\n}, {\n  value: \"quantitative_finance\",\n  label: \"Quantitative Finance\"\n}, {\n  value: \"quantitative_research\",\n  label: \"Quantitative Research\"\n}, {\n  value: \"quantitative_trading\",\n  label: \"Quantitative Trading\"\n}, {\n  value: \"software_engineer\",\n  label: \"Software Engineer\"\n}, {\n  value: \"systems_engineer\",\n  label: \"Systems Engineer\"\n}, {\n  value: \"technology_analyst\",\n  label: \"Technology Analyst\"\n}];\nexport default class AnalyticsResumeAnalysisContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRandomInt = () => {\n      return Math.floor(Math.random() * 100);\n    };\n\n    this.goToAnalyticsPage = () => {\n      this.setState({\n        analyticsPage: true\n      }, () => {\n        this.setState({\n          data: [{\n            skill1: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill2: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill3: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill3: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill4: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill5: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill6: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill7: [this.getRandomInt(), this.getRandomInt()]\n          }, {\n            skill8: [this.getRandomInt(), this.getRandomInt()]\n          }]\n        }, () => {\n          console.log(this.state.data); // this.setState({ score: this.getRandomInt() }, () => {\n          //   console.log(this.state.score);\n          // });\n        });\n      });\n      document.getElementById(\"resume-input\").value = \"\";\n      console.log(this.state.data);\n      console.log(this.state.score);\n    };\n\n    this.handleSubmission = e => {\n      e.preventDefault();\n\n      if (!this.state.titleChosen && !this.state.descChosen) {\n        alert(\"Please choose whether you would like to compare a Job Title or Job Description\");\n        return;\n      } else if (this.state.titleChosen) {\n        if (this.state.selectedTitle) {\n          if (this.state.resumeEntered) {\n            console.log(\"Title: \" + this.state.selectedTitle.label);\n            let title = this.state.selectedTitle.value;\n            let text = this.state.resumeText.replace(\" \", \"_\");\n            console.log(title); // make backend call connection here TODODOOOOO\n\n            this.getScore(title, text);\n            console.log(title);\n            this.getSkills(title, this.state.resumeText); // this.getSkillsResume(this.state.resumeText);\n\n            console.log(this.state.skills_title);\n            console.log(this.state.skills_resume); // var temp = this.state.skills_resume.length < this.state.skills_title.length ? this.state.skills_resume : this.state.skills_title;\n            // for (var i=0; i<Math.min(8, temp.length); i++) {\n            // }\n\n            this.goToAnalyticsPage();\n          } else {\n            alert(\"Please copy and paste your resume\");\n          }\n        } else {\n          alert(\"Please select a job title\");\n        }\n      } else if (this.state.descChosen) {\n        if (this.state.description !== null && this.state.description !== \"\") {\n          if (this.state.resumeEntered) {\n            console.log(\"Description: \" + this.state.description);\n            this.getScore();\n            this.getSkillsDesc(this.state.description, this.state.resumeText);\n            this.goToAnalyticsPage();\n            document.getElementById(\"resume-input\").value = \"\";\n          } else {\n            alert(\"Please copy and paste your resume\");\n          }\n        } else {\n          alert(\"Please enter a description\");\n        }\n      }\n\n      return;\n    };\n\n    this.handleSearchChange = selectedOption => {\n      this.setState({\n        selectedCompareOption: selectedOption\n      }, () => {\n        if (this.state.selectedCompareOption) {\n          if (selectedOption.value === \"job_title\") {\n            this.setState({\n              titleChosen: true,\n              descChosen: false\n            });\n          } else if (selectedOption.value === \"job_description\") {\n            this.setState({\n              titleChosen: false,\n              descChosen: true\n            });\n          }\n\n          console.log(this.state.selectedCompareOption);\n        } else {\n          this.setState({\n            titleChosen: false,\n            descChosen: false\n          }, () => {\n            console.log(this.state.selectedCompareOption);\n          });\n        }\n      });\n    };\n\n    this.handleTitleChosen = selectedOption => {\n      this.setState({\n        selectedTitle: selectedOption\n      }, () => {\n        if (this.state.selectedTitle !== null) {\n          console.log(this.state.selectedTitle.label);\n        }\n      });\n    };\n\n    this.handleDescInput = e => {\n      this.setState({\n        description: e.target.value\n      }, () => {\n        if (this.state.description !== null) {\n          console.log(this.state.description);\n        }\n      });\n    };\n\n    this.handleResumeInput = e => {\n      console.log(e.target.value);\n      this.setState({\n        resumeText: e.target.value\n      }, () => {\n        if (this.state.resumeText) {\n          console.log(this.state.resumeText);\n\n          if (this.state.resumeText === \"\") {\n            this.setState({\n              resumeEntered: false\n            });\n          } else {\n            this.setState({\n              resumeEntered: true\n            });\n          }\n        } else {\n          this.setState({\n            resumeEntered: false\n          });\n        }\n      });\n    };\n\n    this.handleBack = () => {\n      this.setState({\n        analyticsPage: false\n      }, () => {\n        console.log(this.state.analyticsPage);\n      });\n    };\n\n    this.state = {\n      analyticsPage: false,\n      selectedCompareOption: null,\n      titleChosen: false,\n      descChosen: false,\n      description: null,\n      selectedTitle: null,\n      resumeText: null,\n      resumeEntered: false,\n      data: null,\n      chartExists: false,\n      svg: null,\n      chartWidth: null,\n      chartHeight: null,\n      chartArea: null,\n      bottomAxis: null,\n      bottomAxisG: null,\n      leftAxis: null,\n      leftAxisG: null,\n      isExploding: true,\n      score: 0,\n      getColor: true,\n      skills_title: null,\n      skills_desc: null,\n      skills_resume: null\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleTitleChosen = this.handleTitleChosen.bind(this);\n    this.handleDescInput = this.handleDescInput.bind(this);\n    this.handleSubmission = this.handleSubmission.bind(this);\n    this.handleResumeInput = this.handleResumeInput.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.goToAnalyticsPage = this.goToAnalyticsPage.bind(this);\n    this.getScore = this.getScore.bind(this);\n  }\n\n  getScore(keyword, resume) {\n    let str = '/resume_analysis?keyword=' + keyword + '&resume=' + resume;\n    fetch(str).then(res => res.json()).then(output => {\n      console.log(output.output);\n      this.setState({\n        score: output.output\n      }); // this.setState({ skills: output.skills })\n    });\n  }\n\n  getSkills(keyword, resume) {\n    fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n      this.setState({\n        skills_title: output.output\n      }, () => {\n        //   );\n        //   console.log(\"OUTPUT: \", output)\n        // })\n        fetch('/job_ad?content=' + resume).then(res => res.json()).then(output => {\n          this.setState({\n            skills_resume: output.output\n          }, () => {\n            let n = [];\n            let i = 1;\n            const col = [\"#018588\", \"#FFC85C\"];\n            this.state.skills_resume.forEach(x => {\n              // this.state.skills_title.forEach(y => {\n              for (const [key, value] of Object.entries(this.state.skills_title)) {\n                if (x[0] === key) {\n                  // var temp = Object.create(x[0] , [x[1], value]);\n                  // n.push({str(x[0]), [x[1], value]});\n                  n.push({\n                    'skill': x[0],\n                    'frequency': value,\n                    'opacity': i,\n                    'color': col[0]\n                  });\n                  n.push({\n                    'skill': x[0],\n                    'frequency': x[1],\n                    'opacity': i,\n                    'color': col[1]\n                  });\n                  i = i - 0.1;\n                }\n              }\n            });\n            console.log(n);\n            this.setState({\n              data: n\n            });\n          });\n          console.log(\"OUTPUT: \", output);\n        });\n      });\n    });\n  }\n\n  getSkillsDesc(keyword, param) {\n    fetch('/job_ad?content=' + keyword).then(res => res.json()).then(output => {\n      this.setState({\n        skills_desc: output.output\n      });\n      console.log(\"OUTPUT: \", output);\n    });\n    fetch('/job_ad?content=' + param).then(res => res.json()).then(output => {\n      this.setState({\n        skills_resume: output.output\n      });\n      console.log(\"OUTPUT: \", output);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }\n    }, !this.state.analyticsPage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, \"Evaluate and improve your resume\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"resume_description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, \"The Resume Analysis page allows you to compare the communication skills in your resume with the communication skills commonly sought after in different careers. Either compare your resume with one of our positions by choosing to compare with a \\u2018Job Title\\u2019 or compare your resume with a job description of your choice by choosing to compare with \\u2018Job Description\\u2019 and copying and pasting a job ad you\\u2019re interested in.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resume-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"upload-resume-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, \"Step 1:\"), \" Copy and Paste Your Resume\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"resume-text-area \",\n      id: \"resume-input\",\n      placeHolder: \"Please enter your resume here...\",\n      onChange: this.handleResumeInput,\n      cols: \"60\",\n      rows: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"job-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"job-info-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, \"Step 2: \"), \"Compare with\", \"   \"), /*#__PURE__*/React.createElement(Select, {\n      className: \"job-info-searchbar\",\n      options: jobInfoOptions,\n      isClearable: true,\n      onChange: this.handleSearchChange,\n      placeholder: \"Select job information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, this.state.titleChosen && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      className: \"job-info-title-searchbar\",\n      options: jobTitleOptions,\n      isClearable: true,\n      onChange: this.handleTitleChosen,\n      placeholder: \"Select a job title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    })), this.state.descChosen && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"description-text-area\",\n      placeHolder: \"Please enter job description here...\",\n      onChange: this.handleDescInput,\n      cols: \"60\",\n      rows: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"/analytics\",\n      onClick: this.handleSubmission,\n      className: \"start-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, \"Start\"))), this.state.analyticsPage && /*#__PURE__*/React.createElement(Analytics, {\n      data: this.state.data,\n      handleBack: this.handleBack,\n      score: this.state.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/roninsharma/Desktop/Cornell/FALL 2021/ENGRC 3350/Communication-User-Tool/front-end/src/components/AnalyticsResumeAnalysisContainer.js"],"names":["React","Component","Select","Analytics","jobInfoOptions","value","label","jobTitleOptions","AnalyticsResumeAnalysisContainer","constructor","props","getRandomInt","Math","floor","random","goToAnalyticsPage","setState","analyticsPage","data","skill1","skill2","skill3","skill4","skill5","skill6","skill7","skill8","console","log","state","document","getElementById","score","handleSubmission","e","preventDefault","titleChosen","descChosen","alert","selectedTitle","resumeEntered","title","text","resumeText","replace","getScore","getSkills","skills_title","skills_resume","description","getSkillsDesc","handleSearchChange","selectedOption","selectedCompareOption","handleTitleChosen","handleDescInput","target","handleResumeInput","handleBack","chartExists","svg","chartWidth","chartHeight","chartArea","bottomAxis","bottomAxisG","leftAxis","leftAxisG","isExploding","getColor","skills_desc","bind","keyword","resume","str","fetch","then","res","json","output","n","i","col","forEach","x","key","Object","entries","push","param","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Select from \"react-select\";\n// import ResumeAnalysis from \"./ResumeAnalysis\";\nimport Analytics from \"./Analytics\";\n\nconst jobInfoOptions = [\n  { value: \"job_title\", label: \"Job Title\" },\n  { value: \"job_description\", label: \"Job Description\" },\n];\n\nconst jobTitleOptions = [\n  { value: \"automation_engineer\", label: \"Automation Engineer\" },\n  { value: \"computer_hardware_engineer\", label: \"Computer Hardware Engineer\" },\n  { value: \"data_analyst\", label: \"Data Analyst\" },\n  { value: \"data_engineer\", label: \"Data Engineer\" },\n  { value: \"data_scientist\", label: \"Data Scientist\" },\n  { value: \"electrical_engineer\", label: \"Electrical Engineer\" },\n  { value: \"financial_engineer\", label: \"Financial Engineer\" },\n  { value: \"machine_learning_engineer\", label: \"Machine Learning Engineer\" },\n  { value: \"mechanical_engineer\", label: \"Mechanical Engineer\" },\n  { value: \"network_engineer\", label: \"Network Engineer\" },\n  { value: \"qa_engineer\", label: \"QA Engineer\" },\n  { value: \"quantitative_analyst\", label: \"Quantitative Analyst\" },\n  { value: \"quantitative_finance\", label: \"Quantitative Finance\" },\n  { value: \"quantitative_research\", label: \"Quantitative Research\" },\n  { value: \"quantitative_trading\", label: \"Quantitative Trading\" },\n  { value: \"software_engineer\", label: \"Software Engineer\" },\n  { value: \"systems_engineer\", label: \"Systems Engineer\" },\n  { value: \"technology_analyst\", label: \"Technology Analyst\" },\n];\n\nexport default class AnalyticsResumeAnalysisContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      analyticsPage: false,\n      selectedCompareOption: null,\n      titleChosen: false,\n      descChosen: false,\n      description: null,\n      selectedTitle: null,\n      resumeText: null,\n      resumeEntered: false,\n      data: null,\n\n      chartExists: false,\n      svg: null,\n      chartWidth: null,\n      chartHeight: null,\n      chartArea: null,\n      bottomAxis: null,\n      bottomAxisG: null,\n      leftAxis: null,\n      leftAxisG: null,\n\n      isExploding: true,\n      score: 0,\n      getColor: true,\n      skills_title: null,\n      skills_desc: null,\n      skills_resume: null\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleTitleChosen = this.handleTitleChosen.bind(this);\n    this.handleDescInput = this.handleDescInput.bind(this);\n    this.handleSubmission = this.handleSubmission.bind(this);\n    this.handleResumeInput = this.handleResumeInput.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.goToAnalyticsPage = this.goToAnalyticsPage.bind(this);\n    this.getScore = this.getScore.bind(this);\n\n\n  }\n\n  getRandomInt = () => {\n    return Math.floor(Math.random() * 100);\n  };\n\n  goToAnalyticsPage = () => {\n    this.setState({ analyticsPage: true }, () => {\n      this.setState(\n        {\n          data: [\n            { skill1: [this.getRandomInt(), this.getRandomInt()] },\n            { skill2: [this.getRandomInt(), this.getRandomInt()] },\n            { skill3: [this.getRandomInt(), this.getRandomInt()] },\n            { skill3: [this.getRandomInt(), this.getRandomInt()] },\n            { skill4: [this.getRandomInt(), this.getRandomInt()] },\n            { skill5: [this.getRandomInt(), this.getRandomInt()] },\n            { skill6: [this.getRandomInt(), this.getRandomInt()] },\n            { skill7: [this.getRandomInt(), this.getRandomInt()] },\n            { skill8: [this.getRandomInt(), this.getRandomInt()] },\n          ]\n\n          ,\n        },\n        () => {\n          console.log(this.state.data);\n          // this.setState({ score: this.getRandomInt() }, () => {\n          //   console.log(this.state.score);\n          // });\n        }\n      );\n    });\n    document.getElementById(\"resume-input\").value = \"\";\n    console.log(this.state.data);\n    console.log(this.state.score);\n  };\n\n  handleSubmission = (e) => {\n    e.preventDefault();\n    if (!this.state.titleChosen && !this.state.descChosen) {\n      alert(\n        \"Please choose whether you would like to compare a Job Title or Job Description\"\n      );\n      return;\n    } else if (this.state.titleChosen) {\n      if (this.state.selectedTitle) {\n        if (this.state.resumeEntered) {\n          console.log(\"Title: \" + this.state.selectedTitle.label);\n\n          let title = this.state.selectedTitle.value;\n          let text = this.state.resumeText.replace(\" \", \"_\");\n          console.log(title)\n          // make backend call connection here TODODOOOOO\n          this.getScore(title, text);\n          console.log(title)\n          this.getSkills(title, this.state.resumeText);\n          // this.getSkillsResume(this.state.resumeText);\n          console.log(this.state.skills_title);\n          console.log(this.state.skills_resume);\n\n          // var temp = this.state.skills_resume.length < this.state.skills_title.length ? this.state.skills_resume : this.state.skills_title;\n          // for (var i=0; i<Math.min(8, temp.length); i++) {\n\n          // }\n\n          this.goToAnalyticsPage();\n        } else {\n          alert(\"Please copy and paste your resume\");\n        }\n      } else {\n        alert(\"Please select a job title\");\n      }\n    } else if (this.state.descChosen) {\n      if (this.state.description !== null && this.state.description !== \"\") {\n        if (this.state.resumeEntered) {\n          console.log(\"Description: \" + this.state.description);\n          this.getScore();\n          this.getSkillsDesc(this.state.description, this.state.resumeText);\n\n          this.goToAnalyticsPage();\n          document.getElementById(\"resume-input\").value = \"\";\n        } else {\n          alert(\"Please copy and paste your resume\");\n        }\n      } else {\n        alert(\"Please enter a description\");\n      }\n    }\n    return;\n  };\n\n  getScore(keyword, resume) {\n    let str = '/resume_analysis?keyword=' + keyword + '&resume=' + resume;\n\n    fetch(str).then(res => res.json()).then(output => {\n      console.log(output.output);\n      this.setState({ score: output.output })\n      // this.setState({ skills: output.skills })\n    })\n  }\n\n  getSkills(keyword, resume) {\n    fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n      this.setState({\n        skills_title: output.output\n      },\n        () => {\n          //   );\n          //   console.log(\"OUTPUT: \", output)\n          // })\n\n          fetch('/job_ad?content=' + resume).then(res => res.json()).then(output => {\n            this.setState({\n              skills_resume: output.output\n            },\n              () => {\n                let n = [];\n                let i = 1;\n                const col = [\"#018588\", \"#FFC85C\"];\n                this.state.skills_resume.forEach(x => {\n                  // this.state.skills_title.forEach(y => {\n                  for (const [key, value] of Object.entries(this.state.skills_title)) {\n                    if (x[0] === key) {\n                      // var temp = Object.create(x[0] , [x[1], value]);\n                      // n.push({str(x[0]), [x[1], value]});\n                      n.push({\n                        'skill': x[0],\n                        'frequency': value,\n                        'opacity': i,\n                        'color': col[0],\n                      });\n                      n.push({\n                        'skill': x[0],\n                        'frequency': x[1],\n                        'opacity': i,\n                        'color': col[1],\n                      });\n                      i = i - 0.1;\n\n                    }\n                  }\n\n                })\n                console.log(n);\n                this.setState({\n                  data: n\n                })\n              }\n            );\n            console.log(\"OUTPUT: \", output)\n          })\n        }\n      )\n    })\n  }\n\n  getSkillsDesc(keyword, param) {\n    fetch('/job_ad?content=' + keyword).then(res => res.json()).then(output => {\n      this.setState({\n        skills_desc: output.output,\n      });\n      console.log(\"OUTPUT: \", output)\n    })\n    fetch('/job_ad?content=' + param).then(res => res.json()).then(output => {\n      this.setState({\n        skills_resume: output.output,\n      });\n      console.log(\"OUTPUT: \", output)\n    })\n  }\n\n\n  handleSearchChange = (selectedOption) => {\n    this.setState({ selectedCompareOption: selectedOption }, () => {\n      if (this.state.selectedCompareOption) {\n        if (selectedOption.value === \"job_title\") {\n          this.setState({ titleChosen: true, descChosen: false });\n        } else if (selectedOption.value === \"job_description\") {\n          this.setState({ titleChosen: false, descChosen: true });\n        }\n        console.log(this.state.selectedCompareOption);\n      } else {\n        this.setState({ titleChosen: false, descChosen: false }, () => {\n          console.log(this.state.selectedCompareOption);\n        });\n      }\n    });\n  };\n\n  handleTitleChosen = (selectedOption) => {\n    this.setState({ selectedTitle: selectedOption }, () => {\n      if (this.state.selectedTitle !== null) {\n        console.log(this.state.selectedTitle.label);\n      }\n    });\n  };\n\n  handleDescInput = (e) => {\n    this.setState({ description: e.target.value }, () => {\n      if (this.state.description !== null) {\n        console.log(this.state.description);\n      }\n    });\n  };\n\n  handleResumeInput = (e) => {\n    console.log(e.target.value);\n    this.setState({ resumeText: e.target.value }, () => {\n      if (this.state.resumeText) {\n        console.log(this.state.resumeText);\n        if (this.state.resumeText === \"\") {\n          this.setState({ resumeEntered: false });\n        } else {\n          this.setState({ resumeEntered: true });\n        }\n      } else {\n        this.setState({ resumeEntered: false });\n      }\n    });\n  };\n\n  handleBack = () => {\n    this.setState({ analyticsPage: false }, () => {\n      console.log(this.state.analyticsPage);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.analyticsPage && (\n          <div>\n            <h1 className=\"title\">Evaluate and improve your resume</h1>\n            <p className=\"resume_description\">The Resume Analysis page allows you to compare the communication skills in your resume with the communication skills commonly sought after in different careers. Either compare your resume with one of our positions by choosing to compare with a ‘Job Title’ or compare your resume with a job description of your choice by choosing to compare with ‘Job Description’ and copying and pasting a job ad you’re interested in.</p>\n            <div className=\"resume-upload\">\n              <div>\n                <p className=\"upload-resume-text\">\n                  <b>Step 1:</b> Copy and Paste Your Resume\n                </p>\n                <textarea\n                  className=\"resume-text-area \"\n                  id=\"resume-input\"\n                  placeHolder=\"Please enter your resume here...\"\n                  onChange={this.handleResumeInput}\n                  cols=\"60\"\n                  rows=\"7\"\n                />\n              </div>\n            </div>\n\n            <div className=\"job-info\">\n              <h4 className=\"job-info-text\">\n                <b>Step 2: </b>Compare with{\"   \"}\n              </h4>\n              <Select\n                className=\"job-info-searchbar\"\n                options={jobInfoOptions}\n                isClearable={true}\n                onChange={this.handleSearchChange}\n                placeholder=\"Select job information\"\n              />\n              <div>\n                {this.state.titleChosen && (\n                  <div>\n                    <br></br>\n                    <Select\n                      className=\"job-info-title-searchbar\"\n                      options={jobTitleOptions}\n                      isClearable={true}\n                      onChange={this.handleTitleChosen}\n                      placeholder=\"Select a job title\"\n                    />\n                  </div>\n                )}\n                {this.state.descChosen && (\n                  <div>\n                    <br></br>\n                    <textarea\n                      className=\"description-text-area\"\n                      placeHolder=\"Please enter job description here...\"\n                      onChange={this.handleDescInput}\n                      cols=\"60\"\n                      rows=\"7\"\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n            <div>\n              <br></br>\n              <button\n                to=\"/analytics\"\n                onClick={this.handleSubmission}\n                className=\"start-button\"\n              >\n                Start\n              </button>\n            </div>\n          </div>\n        )}\n        {this.state.analyticsPage && (\n          <Analytics\n            data={this.state.data}\n            handleBack={this.handleBack}\n            score={this.state.score}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}