import 'react';
import '@emotion/cache';
<<<<<<< HEAD
import { h as hasOwnProperty, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-699e6908.browser.esm.js';
import '@babel/runtime/helpers/extends';
import '@emotion/weak-memoize';
import 'hoist-non-react-statics';
import '../../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';
=======
import { h as hasOwnProperty, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-99289b21.browser.esm.js';
import '@babel/runtime/helpers/extends';
import '@emotion/weak-memoize';
import 'hoist-non-react-statics';
import '../../isolated-hoist-non-react-statics-do-not-use-this-in-your-code/dist/emotion-react-isolated-hoist-non-react-statics-do-not-use-this-in-your-code.browser.esm.js';
>>>>>>> 39a8ac91c1203e59702c1b86c18a4c5e5058db03
import '@emotion/utils';
import '@emotion/serialize';
import { Fragment as Fragment$1, jsxDEV as jsxDEV$1 } from 'react/jsx-dev-runtime';

var Fragment = Fragment$1;
function jsxDEV(type, props, key, isStaticChildren, source, self) {
  if (!hasOwnProperty.call(props, 'css')) {
    return jsxDEV$1(type, props, key, isStaticChildren, source, self);
  }

  return jsxDEV$1(Emotion, createEmotionProps(type, props), key, isStaticChildren, source, self);
}

export { Fragment, jsxDEV };
