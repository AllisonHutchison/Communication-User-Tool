{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'automation_engineer',\n  label: 'Automation Engineer'\n}, {\n  value: 'computer_hardware_engineer',\n  label: 'Computer Hardware Engineer'\n}, {\n  value: 'data_analyst',\n  label: 'Data Analyst'\n}, {\n  value: 'data_engineer',\n  label: 'Data Engineer'\n}, {\n  value: 'data_scientist',\n  label: 'Data Scientist'\n}, {\n  value: 'electrical_engineer',\n  label: 'Electrical Engineer'\n}, {\n  value: 'financial_engineer',\n  label: 'Financial Engineer'\n}, {\n  value: 'machine_learning_engineer',\n  label: 'Machine Learning Engineer'\n}, {\n  value: 'mechanical_engineer',\n  label: 'Mechanical Engineer'\n}, {\n  value: 'network_engineer',\n  label: 'Network Engineer'\n}, {\n  value: 'qa_engineer',\n  label: 'QA Engineer'\n}, {\n  value: 'quantitative_analyst',\n  label: 'Quantitative Analyst'\n}, {\n  value: 'quantitative_finance',\n  label: 'Quantitative Finance'\n}, {\n  value: 'quantitative_research',\n  label: 'Quantitative Research'\n}, {\n  value: 'quantitative_trading',\n  label: 'Quantitative Trading'\n}, {\n  value: 'software_engineer',\n  label: 'Software Engineer'\n}, {\n  value: 'systems_engineer',\n  label: 'Systems Engineer'\n}, {\n  value: 'technology_analyst',\n  label: 'Technology Analyst'\n}];\nexport default class SkillSearch extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(this.state.selectedOption);\n    };\n\n    this.onClick = () => {\n      console.log(this.state.selectedOption);\n      this.setState({\n        fade: true\n      });\n      this.drawChart();\n    };\n\n    this.drawChart = () => {// d3.json(this.state.data).then(data => {\n      //     const size = 400\n      //     // const svg = d3.select('svg') ? d3.select(this.ref.current) : d3.select(this.ref.current).append('svg')\n      //     //     .class(\"graph\")\n      //     //     .attr('width', size).attr('height', size);\n      //     if (this.state.chartExists) {\n      //         console.log(\"exists\");\n      //         var svg = d3.select(this.ref.current);\n      //     }\n      //     else {\n      //         console.log(\"does not exist\");\n      //         var svg = d3.select(this.ref.current)\n      //             .append('svg')\n      //             .attr(\"class\", \"graph\")\n      //             .attr('width', size)\n      //             .attr('height', size);\n      //     }\n      //     this.setState({ chartExists: true })\n      //     // const rectWidth = 95\n      //     // svg.selectAll('rect')\n      //     //     .data(this.data)\n      //     //     .enter()\n      //     //     .append('rect')\n      //     //     .attr('x', (d, i) => 5 + i * (rectWidth + 5))\n      //     //     .attr('y', (d) => size - d)\n      //     //     .attr('width', rectWidth)\n      //     //     .attr('height', (d) => d)\n      //     //     .attr('fill', 'tomato')\n      //     this.state.data.forEach(d => {\n      //         // d['points'] = Number(d['points']);\n      //         // d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n      //         console.log(d);\n      //     });\n      //     // const width = svg.attr(\"width\");\n      //     // const height = svg.attr(\"height\");\n      //     // const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n      //     // const chartWidth = width - margin.left - margin.right;\n      //     // const chartHeight = height - margin.top - margin.bottom;\n      //     // let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n      //     //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      //     // const priceExtent = d3.extent(data, d => d['price']);\n      //     // const priceScale = d3.scaleLinear().domain(priceExtent).nice().range([0, chartWidth]);\n      //     // const pointsExtent = d3.extent(data, d => d['points']);\n      //     // const pointsScale = d3.scaleLinear().domain(pointsExtent).range([chartHeight, 0]);\n      //     // const stateScale = d3.scaleOrdinal(d3.schemeCategory10);\n      //     // let yAxis = d3.axisLeft(pointsScale);\n      //     // let yGridlines = d3.axisLeft(pointsScale).tickFormat(\"\").tickSize(-chartWidth - 10);\n      //     // svg.append(\"g\").attr(\"class\", \"y axis\")\n      //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n      //     //     .call(yAxis)\n      //     // svg.append(\"g\").attr(\"class\", \"y gridlines\")\n      //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n      //     //     .call(yGridlines)\n      //     // let xAxis = d3.axisBottom(priceScale).tickFormat(d3.format(\"$\"));\n      //     // let xGridlines = d3.axisBottom(priceScale).tickFormat(\"\").tickSize(-chartHeight - 10);\n      //     // svg.append(\"g\").attr(\"class\", \"x axis\")\n      //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n      //     //     .call(xAxis)\n      //     // svg.append(\"g\").attr(\"class\", \"x gridlines\")\n      //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n      //     //     .call(xGridlines)\n      //     // d3.select(\".axis\").raise()\n      // });\n    };\n\n    this.state = {\n      selectedOption: null,\n      chartExists: false // fade: false\n      // data: { \"skill1\": 5, \"skill2\": 8 }\n\n    };\n    this.ref = /*#__PURE__*/React.createRef(); // this.data = [100, 200, 300, 400, 500]\n  }\n\n  render() {\n    // const fade = this.state.fade;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Search for jobs you're interested in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skill-search\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          className: \"searchbar\",\n          options: options,\n          isClearable: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary\",\n          onClick: this.onClick,\n          disabled: !this.state.selectedOption // onAnimationEnd={() => this.setState({ fade: false })}\n          // className={fade ? 'fade' : ''}\n          ,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        ref: this.ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js"],"names":["React","Component","Select","d3","options","value","label","SkillSearch","constructor","handleChange","selectedOption","setState","console","log","state","onClick","fade","drawChart","chartExists","ref","createRef","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\n\nconst options = [\n    { value: 'automation_engineer', label: 'Automation Engineer' },\n    { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n    { value: 'data_analyst', label: 'Data Analyst' },\n    { value: 'data_engineer', label: 'Data Engineer' },\n    { value: 'data_scientist', label: 'Data Scientist' },\n    { value: 'electrical_engineer', label: 'Electrical Engineer' },\n    { value: 'financial_engineer', label: 'Financial Engineer' },\n    { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n    { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n    { value: 'network_engineer', label: 'Network Engineer' },\n    { value: 'qa_engineer', label: 'QA Engineer' },\n    { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n    { value: 'quantitative_finance', label: 'Quantitative Finance' },\n    { value: 'quantitative_research', label: 'Quantitative Research' },\n    { value: 'quantitative_trading', label: 'Quantitative Trading' },\n    { value: 'software_engineer', label: 'Software Engineer' },\n    { value: 'systems_engineer', label: 'Systems Engineer' },\n    { value: 'technology_analyst', label: 'Technology Analyst' }\n]\n\nexport default class SkillSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedOption: null,\n            chartExists: false,\n            // fade: false\n            // data: { \"skill1\": 5, \"skill2\": 8 }\n\n        }\n        this.ref = React.createRef()\n        // this.data = [100, 200, 300, 400, 500]\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        this.setState({ fade: true });\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        // d3.json(this.state.data).then(data => {\n        //     const size = 400\n        //     // const svg = d3.select('svg') ? d3.select(this.ref.current) : d3.select(this.ref.current).append('svg')\n        //     //     .class(\"graph\")\n        //     //     .attr('width', size).attr('height', size);\n\n        //     if (this.state.chartExists) {\n        //         console.log(\"exists\");\n        //         var svg = d3.select(this.ref.current);\n        //     }\n        //     else {\n        //         console.log(\"does not exist\");\n        //         var svg = d3.select(this.ref.current)\n        //             .append('svg')\n        //             .attr(\"class\", \"graph\")\n        //             .attr('width', size)\n        //             .attr('height', size);\n        //     }\n\n        //     this.setState({ chartExists: true })\n\n        //     // const rectWidth = 95\n        //     // svg.selectAll('rect')\n        //     //     .data(this.data)\n        //     //     .enter()\n        //     //     .append('rect')\n        //     //     .attr('x', (d, i) => 5 + i * (rectWidth + 5))\n        //     //     .attr('y', (d) => size - d)\n        //     //     .attr('width', rectWidth)\n        //     //     .attr('height', (d) => d)\n        //     //     .attr('fill', 'tomato')\n\n        //     this.state.data.forEach(d => {\n        //         // d['points'] = Number(d['points']);\n        //         // d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n        //         console.log(d);\n        //     });\n\n        //     // const width = svg.attr(\"width\");\n        //     // const height = svg.attr(\"height\");\n\n        //     // const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n        //     // const chartWidth = width - margin.left - margin.right;\n        //     // const chartHeight = height - margin.top - margin.bottom;\n\n        //     // let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n        //     //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        //     // const priceExtent = d3.extent(data, d => d['price']);\n        //     // const priceScale = d3.scaleLinear().domain(priceExtent).nice().range([0, chartWidth]);\n        //     // const pointsExtent = d3.extent(data, d => d['points']);\n        //     // const pointsScale = d3.scaleLinear().domain(pointsExtent).range([chartHeight, 0]);\n        //     // const stateScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n        //     // let yAxis = d3.axisLeft(pointsScale);\n        //     // let yGridlines = d3.axisLeft(pointsScale).tickFormat(\"\").tickSize(-chartWidth - 10);\n\n        //     // svg.append(\"g\").attr(\"class\", \"y axis\")\n        //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n        //     //     .call(yAxis)\n\n        //     // svg.append(\"g\").attr(\"class\", \"y gridlines\")\n        //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n        //     //     .call(yGridlines)\n\n        //     // let xAxis = d3.axisBottom(priceScale).tickFormat(d3.format(\"$\"));\n        //     // let xGridlines = d3.axisBottom(priceScale).tickFormat(\"\").tickSize(-chartHeight - 10);\n\n        //     // svg.append(\"g\").attr(\"class\", \"x axis\")\n        //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n        //     //     .call(xAxis)\n\n        //     // svg.append(\"g\").attr(\"class\", \"x gridlines\")\n        //     //     .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n        //     //     .call(xGridlines)\n\n        //     // d3.select(\".axis\").raise()\n        // });\n\n\n\n    }\n\n    render() {\n        // const fade = this.state.fade;\n\n        return (\n            <div className=\"skill-search-container\" >\n                <h1 className=\"title\">Search for jobs you're interested in!</h1>\n                <div className=\"skill-search\">\n                    <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                    <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n                    // onAnimationEnd={() => this.setState({ fade: false })}\n                    // className={fade ? 'fade' : ''}\n                    >Search</button>\n                </div>\n                <div className=\"chart\" ref={this.ref} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}