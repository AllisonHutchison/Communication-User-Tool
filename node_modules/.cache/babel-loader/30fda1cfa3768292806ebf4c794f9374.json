{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport skill_search_pic from '../skill_search_pic.png';\nimport Loader from 'react-loader-spinner';\nconst options = [{\n  label: \"Data Engineering\",\n  options: [{\n    value: 'data_analyst',\n    label: 'Data Analyst'\n  }, {\n    value: 'data_engineer',\n    label: 'Data Engineer'\n  }, {\n    value: 'data_scientist',\n    label: 'Data Scientist'\n  }, {\n    value: 'machine_learning_engineer',\n    label: 'Machine Learning Engineer'\n  }, {\n    value: 'network_engineer',\n    label: 'Network Engineer'\n  }]\n}, {\n  label: \"Financial Engineering\",\n  options: [{\n    value: 'financial_engineer',\n    label: 'Financial Engineer'\n  }, {\n    value: 'quantitative_analyst',\n    label: 'Quantitative Analyst'\n  }, {\n    value: 'quantitative_finance',\n    label: 'Quantitative Finance'\n  }, {\n    value: 'quantitative_research',\n    label: 'Quantitative Research'\n  }, {\n    value: 'quantitative_trading',\n    label: 'Quantitative Trading'\n  }, {\n    value: 'technology_analyst',\n    label: 'Technology Analyst'\n  }]\n}, {\n  label: \"Hardware and Technical Engineering\",\n  options: [{\n    value: 'automation_engineer',\n    label: 'Automation Engineer'\n  }, {\n    value: 'computer_hardware_engineer',\n    label: 'Computer Hardware Engineer'\n  }, {\n    value: 'electrical_engineer',\n    label: 'Electrical Engineer'\n  }, {\n    value: 'mechanical_engineer',\n    label: 'Mechanical Engineer'\n  }, {\n    value: 'qa_engineer',\n    label: 'QA Engineer'\n  }, {\n    value: 'systems_engineer',\n    label: 'Systems Engineer'\n  }]\n}, {\n  label: \"Software Engineering\",\n  options: [{\n    value: 'software_engineer',\n    label: 'Software Engineer'\n  }]\n}];\nexport default class SkillSearch extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(this.state.selectedOption);\n    };\n\n    this.onClick = () => {\n      console.log(this.state.selectedOption);\n      this.getSkills(this.state.selectedOption.value);\n      d3.select('.skill-search_pic').style('display', 'none');\n    };\n\n    this.componentDidMount = () => {\n      this.state.svg = d3.select(this.ref.current).append('svg').attr(\"class\", \"graph\").attr('width', 800).attr('height', 350).style('display', 'none');\n      d3.select('.next_steps').style('display', 'none');\n      const width = this.state.svg.attr('width');\n      const height = this.state.svg.attr('height');\n      const margin = {\n        top: 0,\n        right: 10,\n        bottom: 40,\n        left: 200\n      };\n      this.setState({\n        chartWidth: width - margin.left - margin.right\n      });\n      this.setState({\n        chartHeight: height - margin.top - margin.bottom\n      });\n      const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n      this.setState({\n        chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      });\n      this.setState({\n        bottomAxis: d3.axisBottom()\n      });\n      this.setState({\n        bottomAxisG: annotations.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n      });\n      this.setState({\n        leftAxis: d3.axisLeft()\n      });\n      this.setState({\n        leftAxisG: annotations.append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n      });\n    };\n\n    this.drawChart = () => {\n      console.log(\"SKILLS!!!\");\n      console.log(this.state.skills);\n      var res = [];\n      var i = 1.1;\n      console.log(\"ENTRIES!!!\");\n      var entries = Object.entries(this.state.skills); // console.log(entries);\n\n      console.log(entries.sort(function (a, b) {\n        return b[1] - a[1];\n      }));\n      var count = 0; // for (const [key, value] of Object.entries(this.state.skills)) {\n\n      for (const [key, value] of entries) {\n        if (count >= 5) {\n          break;\n        }\n\n        var val = value;\n        var label = value;\n\n        if (value > 200) {\n          val = 200;\n          label = 'over 200';\n        }\n\n        i = i - .15;\n        res.push({\n          'skill': key,\n          'frequency': val,\n          'opacity': i,\n          'label': label\n        });\n        count = count + 1;\n      }\n\n      const skillExtent = d3.map(res, d => d.skill);\n      const frequencyExtent = [0, d3.max(res, d => d.frequency)];\n      const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight]).padding(0.05);\n      this.state.leftAxis.scale(skillScale).tickSize(0);\n      this.state.leftAxisG.transition().call(this.state.leftAxis);\n      const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n      this.state.chartArea.selectAll('rect.bar').data(res).join(enter => enter.append('rect').attr('class', 'bar').attr(\"fill\", \"#FFC85C\").attr(\"x\", d => 0).attr(\"y\", d => skillScale(d.skill)).attr(\"width\", d => frequencyScale(d.frequency)).attr(\"height\", skillScale.bandwidth()).attr(\"opacity\", d => d.opacity), update => update.call(update => update.transition().attr(\"fill\", \"#FFC85C\").attr(\"x\", d => 0).attr(\"y\", d => skillScale(d.skill)).attr(\"width\", d => frequencyScale(d.frequency)).attr(\"height\", skillScale.bandwidth())).attr(\"opacity\", d => d.opacity));\n      this.state.chartArea.selectAll('text.label').data(res).join(enter => enter.append('text').attr('class', 'label').attr(\"text-anchor\", \"end\").attr(\"font-size\", \"15px\").attr(\"x\", d => {\n        if (frequencyScale(d.frequency) <= 25) {\n          return frequencyScale(d.frequency) + 15;\n        } else {\n          return frequencyScale(d.frequency) - 10;\n        }\n      }).attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5).text(d => {\n        if (d.frequency === 0) {\n          return \"\";\n        } else {\n          return d.label;\n        }\n      }), update => update.call(update => update.transition().attr('class', 'label').attr(\"text-anchor\", \"end\").attr(\"font-size\", \"15px\").attr(\"x\", d => {\n        if (frequencyScale(d.frequency) <= 25) {\n          return frequencyScale(d.frequency) + 15;\n        } else {\n          return frequencyScale(d.frequency) - 10;\n        }\n      }).attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5).text(d => {\n        if (d.frequency === 0) {\n          return \"\";\n        } else {\n          return d.label;\n        }\n      })));\n    };\n\n    this.state = {\n      selectedOption: null,\n      chartExists: false,\n      data: {\n        \"skill1\": 5,\n        \"skill2\": 8,\n        \"skill3\": 4,\n        \"skill4\": 1,\n        \"skill5\": 9\n      },\n      svg: null,\n      chartWidth: null,\n      chartHeight: null,\n      chartArea: null,\n      bottomAxis: null,\n      bottomAxisG: null,\n      leftAxis: null,\n      leftAxisG: null,\n      skills: [],\n      score: 0,\n      loading: false\n    };\n    this.ref = React.createRef();\n  }\n\n  getSkills(keyword) {\n    this.setState({\n      loading: true\n    }, () => {\n      d3.select('.graph').style('display', 'none');\n      fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n        this.setState({\n          loading: false,\n          skills: output.output\n        });\n        console.log(\"OUTPUT: \", output);\n        d3.select('.graph').style('display', 'inline');\n        d3.select('.results').text('The most commonly requested communication skills for this job are: ');\n        d3.select('.next_steps').style('display', 'inline');\n        this.drawChart();\n      });\n    });\n  }\n\n  getScore(keyword) {\n    let resume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let str = '/score?keyword=' + keyword ? resume : '/score?keyword=' + keyword + '&resume=' + resume;\n    ;\n    fetch(str).then(res => res.json()).then(output => {\n      this.setState({\n        score: output.score\n      });\n      this.setState({\n        skills: output.skills\n      });\n    });\n  } // ///////////////\n  // getRandomInt = () => {\n  //     return Math.floor(Math.random() * 10);\n  // }\n  // onClick2 = () => {\n  //     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n  //     console.log(this.state.data)\n  //     // var svg = d3.select(this.ref.current)\n  //     // svg.style('display', 'none');\n  // }\n  // ///////////////\n\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skill-search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, \"Select an engineering job you're interested in!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, \"Choose from our selection of 18 engineering job titles in 4 engineering job categories, and we'll show you the top five most commonly requested communication skills for that job based on 5994 different job ads from our database. Use the search bar below to begin!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skill-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"searchbar\",\n      options: options,\n      isClearable: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary\",\n      onClick: this.onClick,\n      disabled: !this.state.selectedOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: skill_search_pic,\n      className: \"skill-search_pic\",\n      alt: \"skill search picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    })), this.state.loading ? /*#__PURE__*/React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#027A8B\",\n      height: \"100\",\n      width: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 110\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      ref: this.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.google.com/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \"test\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"next_steps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \"Head over to our Resume Analysis page to determine how well your resume demonstrates your communication skills and to see which skills you are lacking in.\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js"],"names":["React","Component","Select","d3","skill_search_pic","Loader","options","label","value","SkillSearch","constructor","handleChange","selectedOption","setState","console","log","state","onClick","getSkills","select","style","componentDidMount","svg","ref","current","append","attr","width","height","margin","top","right","bottom","left","chartWidth","chartHeight","annotations","chartArea","bottomAxis","axisBottom","bottomAxisG","leftAxis","axisLeft","leftAxisG","drawChart","skills","res","i","entries","Object","sort","a","b","count","key","val","push","skillExtent","map","d","skill","frequencyExtent","max","frequency","skillScale","scaleBand","domain","range","padding","scale","tickSize","transition","call","frequencyScale","scaleLinear","selectAll","data","join","enter","bandwidth","opacity","update","text","chartExists","score","loading","createRef","keyword","fetch","then","json","output","getScore","resume","str","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,kBADX;AAEID,EAAAA,OAAO,EAAE,CACL;AAAEE,IAAAA,KAAK,EAAE,cAAT;AAAyBD,IAAAA,KAAK,EAAE;AAAhC,GADK,EAEL;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BD,IAAAA,KAAK,EAAE;AAAjC,GAFK,EAGL;AAAEC,IAAAA,KAAK,EAAE,gBAAT;AAA2BD,IAAAA,KAAK,EAAE;AAAlC,GAHK,EAIL;AAAEC,IAAAA,KAAK,EAAE,2BAAT;AAAsCD,IAAAA,KAAK,EAAE;AAA7C,GAJK,EAKL;AAAEC,IAAAA,KAAK,EAAE,kBAAT;AAA6BD,IAAAA,KAAK,EAAE;AAApC,GALK;AAFb,CADY,EAWZ;AACIA,EAAAA,KAAK,EAAE,uBADX;AAEID,EAAAA,OAAO,EAAE,CACL;AAAEE,IAAAA,KAAK,EAAE,oBAAT;AAA+BD,IAAAA,KAAK,EAAE;AAAtC,GADK,EAEL;AAAEC,IAAAA,KAAK,EAAE,sBAAT;AAAiCD,IAAAA,KAAK,EAAE;AAAxC,GAFK,EAGL;AAAEC,IAAAA,KAAK,EAAE,sBAAT;AAAiCD,IAAAA,KAAK,EAAE;AAAxC,GAHK,EAIL;AAAEC,IAAAA,KAAK,EAAE,uBAAT;AAAkCD,IAAAA,KAAK,EAAE;AAAzC,GAJK,EAKL;AAAEC,IAAAA,KAAK,EAAE,sBAAT;AAAiCD,IAAAA,KAAK,EAAE;AAAxC,GALK,EAML;AAAEC,IAAAA,KAAK,EAAE,oBAAT;AAA+BD,IAAAA,KAAK,EAAE;AAAtC,GANK;AAFb,CAXY,EAsBZ;AACIA,EAAAA,KAAK,EAAE,oCADX;AAEID,EAAAA,OAAO,EAAE,CACL;AAAEE,IAAAA,KAAK,EAAE,qBAAT;AAAgCD,IAAAA,KAAK,EAAE;AAAvC,GADK,EAEL;AAAEC,IAAAA,KAAK,EAAE,4BAAT;AAAuCD,IAAAA,KAAK,EAAE;AAA9C,GAFK,EAGL;AAAEC,IAAAA,KAAK,EAAE,qBAAT;AAAgCD,IAAAA,KAAK,EAAE;AAAvC,GAHK,EAIL;AAAEC,IAAAA,KAAK,EAAE,qBAAT;AAAgCD,IAAAA,KAAK,EAAE;AAAvC,GAJK,EAKL;AAAEC,IAAAA,KAAK,EAAE,aAAT;AAAwBD,IAAAA,KAAK,EAAE;AAA/B,GALK,EAML;AAAEC,IAAAA,KAAK,EAAE,kBAAT;AAA6BD,IAAAA,KAAK,EAAE;AAApC,GANK;AAFb,CAtBY,EAiCZ;AACIA,EAAAA,KAAK,EAAE,sBADX;AAEID,EAAAA,OAAO,EAAE,CACL;AAAEE,IAAAA,KAAK,EAAE,mBAAT;AAA8BD,IAAAA,KAAK,EAAE;AAArC,GADK;AAFb,CAjCY,CAAhB;AAyCA,eAAe,MAAME,WAAN,SAA0BR,SAA1B,CAAoC;AAC/CS,EAAAA,WAAW,GAAG;AACV;;AADU,SA0BdC,YA1Bc,GA0BEC,cAAD,IAAoB;AAC/B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,cAAvB;AACH,KA7Ba;;AAAA,SAgCdK,OAhCc,GAgCJ,MAAM;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,cAAvB;AACA,WAAKM,SAAL,CAAe,KAAKF,KAAL,CAAWJ,cAAX,CAA0BJ,KAAzC;AACAL,MAAAA,EAAE,CAACgB,MAAH,CAAU,mBAAV,EAA+BC,KAA/B,CAAqC,SAArC,EAAgD,MAAhD;AAEH,KArCa;;AAAA,SA8EdC,iBA9Ec,GA8EM,MAAM;AAEtB,WAAKL,KAAL,CAAWM,GAAX,GAAiBnB,EAAE,CAACgB,MAAH,CAAU,KAAKI,GAAL,CAASC,OAAnB,EACZC,MADY,CACL,KADK,EAEZC,IAFY,CAEP,OAFO,EAEE,OAFF,EAGZA,IAHY,CAGP,OAHO,EAGE,GAHF,EAIZA,IAJY,CAIP,QAJO,EAIG,GAJH,EAKZN,KALY,CAKN,SALM,EAKK,MALL,CAAjB;AAOAjB,MAAAA,EAAE,CAACgB,MAAH,CAAU,aAAV,EAAyBC,KAAzB,CAA+B,SAA/B,EAA0C,MAA1C;AAEA,YAAMO,KAAK,GAAG,KAAKX,KAAL,CAAWM,GAAX,CAAeI,IAAf,CAAoB,OAApB,CAAd;AACA,YAAME,MAAM,GAAG,KAAKZ,KAAL,CAAWM,GAAX,CAAeI,IAAf,CAAoB,QAApB,CAAf;AAEA,YAAMG,MAAM,GAAG;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,MAAM,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAAf;AACA,WAAKpB,QAAL,CAAc;AAAEqB,QAAAA,UAAU,EAAEP,KAAK,GAAGE,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE;AAA3C,OAAd;AACA,WAAKlB,QAAL,CAAc;AAAEsB,QAAAA,WAAW,EAAEP,MAAM,GAAGC,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG;AAA5C,OAAd;AAEA,YAAMI,WAAW,GAAG,KAAKpB,KAAL,CAAWM,GAAX,CAAeG,MAAf,CAAsB,GAAtB,EAA2BC,IAA3B,CAAgC,IAAhC,EAAsC,aAAtC,CAApB;AACA,WAAKb,QAAL,CAAc;AACVwB,QAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWM,GAAX,CAAeG,MAAf,CAAsB,GAAtB,EAA2BC,IAA3B,CAAgC,IAAhC,EAAsC,OAAtC,EACNA,IADM,CACD,WADC,EACY,eAAeG,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAD5D;AADD,OAAd;AAKA,WAAKjB,QAAL,CAAc;AAAEyB,QAAAA,UAAU,EAAEnC,EAAE,CAACoC,UAAH;AAAd,OAAd;AACA,WAAK1B,QAAL,CAAc;AACV2B,QAAAA,WAAW,EAAEJ,WAAW,CAACX,MAAZ,CAAmB,GAAnB,EACRC,IADQ,CACH,OADG,EACM,QADN,EAERA,IAFQ,CAEH,WAFG,EAEW,aAAYG,MAAM,CAACI,IAAK,IAAG,MAAMJ,MAAM,CAACC,GAAI,GAFvD;AADH,OAAd;AAMA,WAAKjB,QAAL,CAAc;AAAE4B,QAAAA,QAAQ,EAAEtC,EAAE,CAACuC,QAAH;AAAZ,OAAd;AACA,WAAK7B,QAAL,CAAc;AACV8B,QAAAA,SAAS,EAAEP,WAAW,CAACX,MAAZ,CAAmB,GAAnB,EACNC,IADM,CACD,OADC,EACQ,QADR,EAENA,IAFM,CAED,WAFC,EAEa,aAAYG,MAAM,CAACI,IAAP,GAAc,EAAG,IAAGJ,MAAM,CAACC,GAAI,GAFxD;AADD,OAAd;AAMH,KApHa;;AAAA,SAsHdc,SAtHc,GAsHF,MAAM;AACd9B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAW6B,MAAvB;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,CAAC,GAAG,GAAR;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAIiC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAe,KAAKhC,KAAL,CAAW6B,MAA1B,CAAd,CANc,CAOd;;AACA/B,MAAAA,OAAO,CAACC,GAAR,CAAYiC,OAAO,CAACE,IAAR,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAf;AAAoB,OAAnD,CAAZ;AAEA,UAAIE,KAAK,GAAG,CAAZ,CAVc,CAWd;;AACA,WAAK,MAAM,CAACC,GAAD,EAAM9C,KAAN,CAAX,IAA2BwC,OAA3B,EAAoC;AAChC,YAAIK,KAAK,IAAI,CAAb,EAAgB;AACZ;AACH;;AACD,YAAIE,GAAG,GAAG/C,KAAV;AACA,YAAID,KAAK,GAAGC,KAAZ;;AACA,YAAIA,KAAK,GAAG,GAAZ,EAAiB;AACb+C,UAAAA,GAAG,GAAG,GAAN;AACAhD,UAAAA,KAAK,GAAG,UAAR;AACH;;AACDwC,QAAAA,CAAC,GAAGA,CAAC,GAAG,GAAR;AACAD,QAAAA,GAAG,CAACU,IAAJ,CAAS;AACL,mBAASF,GADJ;AAEL,uBAAaC,GAFR;AAGL,qBAAWR,CAHN;AAIL,mBAASxC;AAJJ,SAAT;AAMA8C,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACH;;AAGD,YAAMI,WAAW,GAAGtD,EAAE,CAACuD,GAAH,CAAOZ,GAAP,EAAYa,CAAC,IAAIA,CAAC,CAACC,KAAnB,CAApB;AAEA,YAAMC,eAAe,GAAG,CAAC,CAAD,EAAI1D,EAAE,CAAC2D,GAAH,CAAOhB,GAAP,EAAYa,CAAC,IAAIA,CAAC,CAACI,SAAnB,CAAJ,CAAxB;AAEA,YAAMC,UAAU,GAAG7D,EAAE,CAAC8D,SAAH,GAAeC,MAAf,CAAsBT,WAAtB,EAAmCU,KAAnC,CAAyC,CAAC,CAAD,EAAI,KAAKnD,KAAL,CAAWmB,WAAf,CAAzC,EACdiC,OADc,CACN,IADM,CAAnB;AAIA,WAAKpD,KAAL,CAAWyB,QAAX,CAAoB4B,KAApB,CAA0BL,UAA1B,EAAsCM,QAAtC,CAA+C,CAA/C;AACA,WAAKtD,KAAL,CAAW2B,SAAX,CAAqB4B,UAArB,GAAkCC,IAAlC,CAAuC,KAAKxD,KAAL,CAAWyB,QAAlD;AAEA,YAAMgC,cAAc,GAAGtE,EAAE,CAACuE,WAAH,GAAiBR,MAAjB,CAAwBL,eAAxB,EAAyCM,KAAzC,CAA+C,CAAC,CAAD,EAAI,KAAKnD,KAAL,CAAWkB,UAAf,CAA/C,CAAvB;AAEA,WAAKlB,KAAL,CAAWqB,SAAX,CAAqBsC,SAArB,CAA+B,UAA/B,EAA2CC,IAA3C,CAAgD9B,GAAhD,EACK+B,IADL,CACUC,KAAK,IAAIA,KAAK,CAACrD,MAAN,CAAa,MAAb,EACVC,IADU,CACL,OADK,EACI,KADJ,EAEVA,IAFU,CAEL,MAFK,EAEG,SAFH,EAGVA,IAHU,CAGL,GAHK,EAGAiC,CAAC,IAAI,CAHL,EAIVjC,IAJU,CAIL,GAJK,EAIAiC,CAAC,IAAIK,UAAU,CAACL,CAAC,CAACC,KAAH,CAJf,EAKVlC,IALU,CAKL,OALK,EAKIiC,CAAC,IAAIc,cAAc,CAACd,CAAC,CAACI,SAAH,CALvB,EAMVrC,IANU,CAML,QANK,EAMKsC,UAAU,CAACe,SAAX,EANL,EAOVrD,IAPU,CAOL,SAPK,EAOMiC,CAAC,IAAIA,CAAC,CAACqB,OAPb,CADnB,EASQC,MAAM,IAAIA,MAAM,CAACT,IAAP,CAAYS,MAAM,IAAIA,MAAM,CAACV,UAAP,GAC3B7C,IAD2B,CACtB,MADsB,EACd,SADc,EAE3BA,IAF2B,CAEtB,GAFsB,EAEjBiC,CAAC,IAAI,CAFY,EAG3BjC,IAH2B,CAGtB,GAHsB,EAGjBiC,CAAC,IAAIK,UAAU,CAACL,CAAC,CAACC,KAAH,CAHE,EAI3BlC,IAJ2B,CAItB,OAJsB,EAIbiC,CAAC,IAAIc,cAAc,CAACd,CAAC,CAACI,SAAH,CAJN,EAK3BrC,IAL2B,CAKtB,QALsB,EAKZsC,UAAU,CAACe,SAAX,EALY,CAAtB,EAMLrD,IANK,CAMA,SANA,EAMWiC,CAAC,IAAIA,CAAC,CAACqB,OANlB,CATlB;AAiBA,WAAKhE,KAAL,CAAWqB,SAAX,CAAqBsC,SAArB,CAA+B,YAA/B,EAA6CC,IAA7C,CAAkD9B,GAAlD,EACK+B,IADL,CACUC,KAAK,IAAIA,KAAK,CAACrD,MAAN,CAAa,MAAb,EACVC,IADU,CACL,OADK,EACI,OADJ,EAEVA,IAFU,CAEL,aAFK,EAEU,KAFV,EAGVA,IAHU,CAGL,WAHK,EAGQ,MAHR,EAIVA,IAJU,CAIL,GAJK,EAIAiC,CAAC,IAAI;AACZ,YAAIc,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,IAA+B,EAAnC,EAAuC;AACnC,iBAAOU,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,GAA8B,EAArC;AACH,SAFD,MAGK;AACD,iBAAOU,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,GAA8B,EAArC;AACH;AACJ,OAXU,EAYVrC,IAZU,CAYL,GAZK,EAYAiC,CAAC,IAAIK,UAAU,CAACL,CAAC,CAACC,KAAH,CAAV,GAAsBI,UAAU,CAACe,SAAX,KAAyB,CAA/C,GAAmD,CAZxD,EAaVG,IAbU,CAaLvB,CAAC,IAAI;AACP,YAAIA,CAAC,CAACI,SAAF,KAAgB,CAApB,EAAuB;AAAE,iBAAO,EAAP;AAAY,SAArC,MACK;AAAE,iBAAOJ,CAAC,CAACpD,KAAT;AAAiB;AAC3B,OAhBU,CADnB,EAkBQ0E,MAAM,IAAIA,MAAM,CAACT,IAAP,CAAYS,MAAM,IAAIA,MAAM,CAACV,UAAP,GAC3B7C,IAD2B,CACtB,OADsB,EACb,OADa,EAE3BA,IAF2B,CAEtB,aAFsB,EAEP,KAFO,EAG3BA,IAH2B,CAGtB,WAHsB,EAGT,MAHS,EAI3BA,IAJ2B,CAItB,GAJsB,EAIjBiC,CAAC,IAAI;AACZ,YAAIc,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,IAA+B,EAAnC,EAAuC;AACnC,iBAAOU,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,GAA8B,EAArC;AACH,SAFD,MAGK;AACD,iBAAOU,cAAc,CAACd,CAAC,CAACI,SAAH,CAAd,GAA8B,EAArC;AACH;AACJ,OAX2B,EAY3BrC,IAZ2B,CAYtB,GAZsB,EAYjBiC,CAAC,IAAIK,UAAU,CAACL,CAAC,CAACC,KAAH,CAAV,GAAsBI,UAAU,CAACe,SAAX,KAAyB,CAA/C,GAAmD,CAZvC,EAa3BG,IAb2B,CAatBvB,CAAC,IAAI;AACP,YAAIA,CAAC,CAACI,SAAF,KAAgB,CAApB,EAAuB;AAAE,iBAAO,EAAP;AAAY,SAArC,MACK;AAAE,iBAAOJ,CAAC,CAACpD,KAAT;AAAiB;AAC3B,OAhB2B,CAAtB,CAlBlB;AAmCH,KAxNa;;AAEV,SAAKS,KAAL,GAAa;AACTJ,MAAAA,cAAc,EAAE,IADP;AAETuE,MAAAA,WAAW,EAAE,KAFJ;AAITP,MAAAA,IAAI,EAAE;AAAE,kBAAU,CAAZ;AAAe,kBAAU,CAAzB;AAA4B,kBAAU,CAAtC;AAAyC,kBAAU,CAAnD;AAAsD,kBAAU;AAAhE,OAJG;AAMTtD,MAAAA,GAAG,EAAE,IANI;AAOTY,MAAAA,UAAU,EAAE,IAPH;AAQTC,MAAAA,WAAW,EAAE,IARJ;AASTE,MAAAA,SAAS,EAAE,IATF;AAUTC,MAAAA,UAAU,EAAE,IAVH;AAWTE,MAAAA,WAAW,EAAE,IAXJ;AAYTC,MAAAA,QAAQ,EAAE,IAZD;AAaTE,MAAAA,SAAS,EAAE,IAbF;AAeTE,MAAAA,MAAM,EAAE,EAfC;AAgBTuC,MAAAA,KAAK,EAAE,CAhBE;AAkBTC,MAAAA,OAAO,EAAE;AAlBA,KAAb;AAqBA,SAAK9D,GAAL,GAAWvB,KAAK,CAACsF,SAAN,EAAX;AACH;;AAeDpE,EAAAA,SAAS,CAACqE,OAAD,EAAU;AACf,SAAK1E,QAAL,CAAc;AAAEwE,MAAAA,OAAO,EAAE;AAAX,KAAd,EAAiC,MAAM;AACnClF,MAAAA,EAAE,CAACgB,MAAH,CAAU,QAAV,EAAoBC,KAApB,CAA0B,SAA1B,EAAqC,MAArC;AACAoE,MAAAA,KAAK,CAAC,qBAAqBD,OAAtB,CAAL,CAAoCE,IAApC,CAAyC3C,GAAG,IAAIA,GAAG,CAAC4C,IAAJ,EAAhD,EAA4DD,IAA5D,CAAiEE,MAAM,IAAI;AACvE,aAAK9E,QAAL,CAAc;AACVwE,UAAAA,OAAO,EAAE,KADC;AAEVxC,UAAAA,MAAM,EAAE8C,MAAM,CAACA;AAFL,SAAd;AAIA7E,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB4E,MAAxB;AACAxF,QAAAA,EAAE,CAACgB,MAAH,CAAU,QAAV,EAAoBC,KAApB,CAA0B,SAA1B,EAAqC,QAArC;AACAjB,QAAAA,EAAE,CAACgB,MAAH,CAAU,UAAV,EAAsB+D,IAAtB,CAA2B,qEAA3B;AACA/E,QAAAA,EAAE,CAACgB,MAAH,CAAU,aAAV,EAAyBC,KAAzB,CAA+B,SAA/B,EAA0C,QAA1C;AACA,aAAKwB,SAAL;AACH,OAVD;AAWH,KAbD;AAcH;;AAEDgD,EAAAA,QAAQ,CAACL,OAAD,EAAyB;AAAA,QAAfM,MAAe,uEAAN,IAAM;AAC7B,QAAIC,GAAG,GAAG,oBAAoBP,OAApB,GAA8BM,MAA9B,GAAuC,oBAAoBN,OAApB,GAA8B,UAA9B,GAA2CM,MAA5F;AAAmG;AAEnGL,IAAAA,KAAK,CAACM,GAAD,CAAL,CAAWL,IAAX,CAAgB3C,GAAG,IAAIA,GAAG,CAAC4C,IAAJ,EAAvB,EAAmCD,IAAnC,CAAwCE,MAAM,IAAI;AAC9C,WAAK9E,QAAL,CAAc;AAAEuE,QAAAA,KAAK,EAAEO,MAAM,CAACP;AAAhB,OAAd;AACA,WAAKvE,QAAL,CAAc;AAAEgC,QAAAA,MAAM,EAAE8C,MAAM,CAAC9C;AAAjB,OAAd;AACH,KAHD;AAIH,GAhE8C,CAkE/C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA8IAkD,EAAAA,MAAM,GAAG;AACLjF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iRAFJ,CADJ,eAQI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEV,OAAvC;AAAgD,MAAA,WAAW,EAAE,IAA7D;AAAmE,MAAA,QAAQ,EAAE,KAAKK,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,yBAA5B;AAAsD,MAAA,OAAO,EAAE,KAAKM,OAApE;AAA6E,MAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWJ,cAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CARJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAK,MAAA,GAAG,EAAER,gBAAV;AAA4B,MAAA,SAAS,EAAC,kBAAtC;AAAyD,MAAA,GAAG,EAAC,sBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAdJ,EAeK,KAAKY,KAAL,CAAWqE,OAAX,gBAAqB,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,EAAC,KAAhD;AAAsD,MAAA,KAAK,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,gBAA4F;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfjG,eAgBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAE,KAAK9D,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAiBI;AAAG,MAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oKAlBJ,CADJ;AAsBH;;AApP8C","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport skill_search_pic from '../skill_search_pic.png';\nimport Loader from 'react-loader-spinner';\n\nconst options = [\n    {\n        label: \"Data Engineering\",\n        options: [\n            { value: 'data_analyst', label: 'Data Analyst' },\n            { value: 'data_engineer', label: 'Data Engineer' },\n            { value: 'data_scientist', label: 'Data Scientist' },\n            { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n            { value: 'network_engineer', label: 'Network Engineer' }\n        ]\n    },\n    {\n        label: \"Financial Engineering\",\n        options: [\n            { value: 'financial_engineer', label: 'Financial Engineer' },\n            { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n            { value: 'quantitative_finance', label: 'Quantitative Finance' },\n            { value: 'quantitative_research', label: 'Quantitative Research' },\n            { value: 'quantitative_trading', label: 'Quantitative Trading' },\n            { value: 'technology_analyst', label: 'Technology Analyst' }\n        ]\n    },\n    {\n        label: \"Hardware and Technical Engineering\",\n        options: [\n            { value: 'automation_engineer', label: 'Automation Engineer' },\n            { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n            { value: 'electrical_engineer', label: 'Electrical Engineer' },\n            { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n            { value: 'qa_engineer', label: 'QA Engineer' },\n            { value: 'systems_engineer', label: 'Systems Engineer' },\n        ]\n    },\n    {\n        label: \"Software Engineering\",\n        options: [\n            { value: 'software_engineer', label: 'Software Engineer' }\n        ]\n    }\n];\n\nexport default class SkillSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedOption: null,\n            chartExists: false,\n\n            data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 },\n\n            svg: null,\n            chartWidth: null,\n            chartHeight: null,\n            chartArea: null,\n            bottomAxis: null,\n            bottomAxisG: null,\n            leftAxis: null,\n            leftAxisG: null,\n\n            skills: [],\n            score: 0,\n\n            loading: false\n\n        }\n        this.ref = React.createRef()\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        this.getSkills(this.state.selectedOption.value);\n        d3.select('.skill-search_pic').style('display', 'none');\n\n    }\n\n    getSkills(keyword) {\n        this.setState({ loading: true }, () => {\n            d3.select('.graph').style('display', 'none');\n            fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n                this.setState({\n                    loading: false,\n                    skills: output.output\n                });\n                console.log(\"OUTPUT: \", output)\n                d3.select('.graph').style('display', 'inline');\n                d3.select('.results').text('The most commonly requested communication skills for this job are: ');\n                d3.select('.next_steps').style('display', 'inline');\n                this.drawChart();\n            })\n        })\n    }\n\n    getScore(keyword, resume = null) {\n        let str = '/score?keyword=' + keyword ? resume : '/score?keyword=' + keyword + '&resume=' + resume;;\n\n        fetch(str).then(res => res.json()).then(output => {\n            this.setState({ score: output.score })\n            this.setState({ skills: output.skills })\n        })\n    }\n\n    // ///////////////\n    // getRandomInt = () => {\n    //     return Math.floor(Math.random() * 10);\n    // }\n\n    // onClick2 = () => {\n    //     this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n    //     console.log(this.state.data)\n    //     // var svg = d3.select(this.ref.current)\n    //     // svg.style('display', 'none');\n    // }\n    // ///////////////\n\n    componentDidMount = () => {\n\n        this.state.svg = d3.select(this.ref.current)\n            .append('svg')\n            .attr(\"class\", \"graph\")\n            .attr('width', 800)\n            .attr('height', 350)\n            .style('display', 'none');\n\n        d3.select('.next_steps').style('display', 'none');\n\n        const width = this.state.svg.attr('width');\n        const height = this.state.svg.attr('height');\n\n        const margin = { top: 0, right: 10, bottom: 40, left: 200 };\n        this.setState({ chartWidth: width - margin.left - margin.right });\n        this.setState({ chartHeight: height - margin.top - margin.bottom });\n\n        const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n        this.setState({\n            chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        });\n\n        this.setState({ bottomAxis: d3.axisBottom() });\n        this.setState({\n            bottomAxisG: annotations.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n        });\n\n        this.setState({ leftAxis: d3.axisLeft() });\n        this.setState({\n            leftAxisG: annotations.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n        });\n\n    }\n\n    drawChart = () => {\n        console.log(\"SKILLS!!!\")\n        console.log(this.state.skills)\n        var res = []\n        var i = 1.1\n        console.log(\"ENTRIES!!!\")\n        var entries = Object.entries(this.state.skills);\n        // console.log(entries);\n        console.log(entries.sort(function (a, b) { return b[1] - a[1] }));\n\n        var count = 0;\n        // for (const [key, value] of Object.entries(this.state.skills)) {\n        for (const [key, value] of entries) {\n            if (count >= 5) {\n                break;\n            }\n            var val = value;\n            var label = value;\n            if (value > 200) {\n                val = 200;\n                label = 'over 200';\n            }\n            i = i - .15\n            res.push({\n                'skill': key,\n                'frequency': val,\n                'opacity': i,\n                'label': label\n            })\n            count = count + 1;\n        }\n\n\n        const skillExtent = d3.map(res, d => d.skill)\n\n        const frequencyExtent = [0, d3.max(res, d => d.frequency)]\n\n        const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight])\n            .padding(0.05);\n\n\n        this.state.leftAxis.scale(skillScale).tickSize(0);\n        this.state.leftAxisG.transition().call(this.state.leftAxis);\n\n        const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n\n        this.state.chartArea.selectAll('rect.bar').data(res)\n            .join(enter => enter.append('rect')\n                .attr('class', 'bar')\n                .attr(\"fill\", \"#FFC85C\")\n                .attr(\"x\", d => 0)\n                .attr(\"y\", d => skillScale(d.skill))\n                .attr(\"width\", d => frequencyScale(d.frequency))\n                .attr(\"height\", skillScale.bandwidth())\n                .attr(\"opacity\", d => d.opacity),\n                update => update.call(update => update.transition()\n                    .attr(\"fill\", \"#FFC85C\")\n                    .attr(\"x\", d => 0)\n                    .attr(\"y\", d => skillScale(d.skill))\n                    .attr(\"width\", d => frequencyScale(d.frequency))\n                    .attr(\"height\", skillScale.bandwidth()))\n                    .attr(\"opacity\", d => d.opacity));\n\n        this.state.chartArea.selectAll('text.label').data(res)\n            .join(enter => enter.append('text')\n                .attr('class', 'label')\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"x\", d => {\n                    if (frequencyScale(d.frequency) <= 25) {\n                        return frequencyScale(d.frequency) + 15;\n                    }\n                    else {\n                        return frequencyScale(d.frequency) - 10;\n                    }\n                })\n                .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                .text(d => {\n                    if (d.frequency === 0) { return \"\"; }\n                    else { return d.label; }\n                }),\n                update => update.call(update => update.transition()\n                    .attr('class', 'label')\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"font-size\", \"15px\")\n                    .attr(\"x\", d => {\n                        if (frequencyScale(d.frequency) <= 25) {\n                            return frequencyScale(d.frequency) + 15;\n                        }\n                        else {\n                            return frequencyScale(d.frequency) - 10;\n                        }\n                    })\n                    .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                    .text(d => {\n                        if (d.frequency === 0) { return \"\"; }\n                        else { return d.label; }\n                    })));\n    }\n\n    render() {\n        console.log(this.state);\n\n        return (\n            <div className=\"skill-search-container\" >\n                <div className=\"header\">\n                    <h1 className=\"title\">Select an engineering job you're interested in!</h1>\n                    <p>\n                        Choose from our selection of 18 engineering job titles in 4 engineering job categories, and we'll show you the top five\n                        most commonly requested communication skills for that job based on 5994 different job ads from our database. Use the search bar below to begin!\n                    </p>\n                </div>\n                <div className=\"skill-search\">\n                    <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                    <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n                    >Search</button>\n                </div>\n                {/* <button className=\"change1\" onClick={this.onClick2}>change1</button> */}\n                <center><img src={skill_search_pic} className=\"skill-search_pic\" alt=\"skill search picture\" /></center>\n                {this.state.loading ? <Loader type=\"ThreeDots\" color=\"#027A8B\" height=\"100\" width=\"100\" /> : <p className=\"results\"></p>}\n                <div className=\"chart\" ref={this.ref} />\n                <a href=\"https://www.google.com/\">test</a>\n                <p className=\"next_steps\">Head over to our Resume Analysis page to determine how well your resume demonstrates your communication skills and to see which skills you are lacking in.</p>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}