{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'automation_engineer',\n  label: 'Automation Engineer'\n}, {\n  value: 'computer_hardware_engineer',\n  label: 'Computer Hardware Engineer'\n}, {\n  value: 'data_analyst',\n  label: 'Data Analyst'\n}, {\n  value: 'data_engineer',\n  label: 'Data Engineer'\n}, {\n  value: 'data_scientist',\n  label: 'Data Scientist'\n}, {\n  value: 'electrical_engineer',\n  label: 'Electrical Engineer'\n}, {\n  value: 'financial_engineer',\n  label: 'Financial Engineer'\n}, {\n  value: 'machine_learning_engineer',\n  label: 'Machine Learning Engineer'\n}, {\n  value: 'mechanical_engineer',\n  label: 'Mechanical Engineer'\n}, {\n  value: 'network_engineer',\n  label: 'Network Engineer'\n}, {\n  value: 'qa_engineer',\n  label: 'QA Engineer'\n}, {\n  value: 'quantitative_analyst',\n  label: 'Quantitative Analyst'\n}, {\n  value: 'quantitative_finance',\n  label: 'Quantitative Finance'\n}, {\n  value: 'quantitative_research',\n  label: 'Quantitative Research'\n}, {\n  value: 'quantitative_trading',\n  label: 'Quantitative Trading'\n}, {\n  value: 'software_engineer',\n  label: 'Software Engineer'\n}, {\n  value: 'systems_engineer',\n  label: 'Systems Engineer'\n}, {\n  value: 'technology_analyst',\n  label: 'Technology Analyst'\n}];\nexport default class SkillSearch extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(this.state.selectedOption);\n    };\n\n    this.onClick = () => {\n      console.log(this.state.selectedOption);\n      this.setState({\n        fade: true\n      });\n      this.drawChart();\n    };\n\n    this.onClick2 = () => {\n      this.setState({\n        data: {\n          \"skill5\": 1,\n          \"skill6\": 2,\n          \"skill7\": 3,\n          \"skill8\": 4,\n          \"skill9\": 5\n        }\n      });\n      console.log(this.state.data); // var svg = d3.select(this.ref.current)\n      // svg.style('display', 'none');\n    };\n\n    this.drawChart = () => {\n      // d3.json(this.state.data).then(data => {\n      // this.state.data.then(data => {\n      // const svg = d3.select('svg') ? d3.select(this.ref.current) : d3.select(this.ref.current).append('svg')\n      //     .class(\"graph\")\n      //     .attr('width', size).attr('height', size);\n      // const size = 400\n      // if (this.state.chartExists) {\n      //     console.log(\"exists\");\n      //     var svg = d3.select(this.ref.current);\n      // }\n      // else {\n      //     console.log(\"does not exist\");\n      //     var svg = d3.select(this.ref.current)\n      //         .append('svg')\n      //         .attr(\"class\", \"graph\")\n      //         .attr('width', size)\n      //         .attr('height', size);\n      //     this.setState({ chartExists: true })\n      // }\n      // const svg = d3.select(this.ref.current);\n      // .style('display', 'block');\n      const width = svg.attr(\"width\");\n      const height = svg.attr(\"height\");\n      const margin = {\n        top: 20,\n        right: 10,\n        bottom: 30,\n        left: 35\n      };\n      const chartWidth = width - margin.left - margin.right;\n      const chartHeight = height - margin.top - margin.bottom;\n      let annotations = svg.append(\"g\").attr(\"id\", \"annotations\");\n      let chartArea = svg.append(\"g\").attr(\"id\", \"chart\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      let bottomAxis = d3.axisBottom();\n      let bottomAxisG = annotations.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(${margin.left},${chartHeight + margin.top + 10})`);\n      let leftAxis = d3.axisLeft();\n      let leftAxisG = annotations.append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", `translate(${margin.left - 10},${margin.top})`); // var skills = []\n      // var frequency = []\n\n      var res = [];\n\n      for (const [key, value] of Object.entries(this.state.data)) {\n        // skills.push(key);\n        // frequency.push(value);\n        res.push({\n          'skill': key,\n          'frequency': value\n        });\n      }\n\n      console.log(res); // const skillExtent = d3.extent(skills)\n\n      const skillExtent = d3.map(res, d => d.skill);\n      console.log(skillExtent);\n      const frequencyExtent = d3.extent(res, d => d.frequency);\n      console.log(frequencyExtent); // const genres = d3.map(data, d => d.genre)\n\n      const skillScale = d3.scaleBand().domain(skillExtent).range([0, chartWidth]).padding(0.05);\n      console.log(skillExtent);\n      bottomAxis.scale(skillScale);\n      bottomAxisG.transition().call(bottomAxis);\n      const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([chartHeight, 0]);\n      leftAxis.scale(frequencyScale);\n      leftAxisG.transition().call(leftAxis);\n      chartArea.selectAll('rect.bar').data(res) // d => d.genre\n      .join(enter => enter.append('rect').attr('class', 'bar').attr(\"fill\", \"steelblue\").attr(\"x\", d => skillScale(d.skill)).attr(\"y\", d => frequencyScale(d.frequency)).attr(\"height\", d => frequencyScale(0) - frequencyScale(d.frequency)).attr(\"width\", skillScale.bandwidth()).attr(\"opacity\", 0) // Set opacity low, then animate to 1 to make them fade in\n      .call(enter => enter.transition().attr('opacity', 1)), update => update.call(update => update.transition() // Animate resizing and movement\n      .attr(\"fill\", \"steelblue\").attr(\"x\", d => skillScale(d.skill)).attr(\"y\", d => frequencyScale(d.frequency)).attr(\"height\", d => frequencyScale(0) - frequencyScale(d.frequency)).attr(\"width\", skillScale.bandwidth())), exit => exit.call(exit => exit.transition().attr('opacity', 0).remove())); // Animate opacity to fade out\n      // const rectWidth = 95\n      // svg.selectAll('rect')\n      //     .data(this.state.data)\n      //     .enter()\n      //     .append('rect')\n      //     .attr('x', (d, i) => 5 + i * (rectWidth + 5))\n      //     .attr('y', (d) => size - d)\n      //     .attr('width', rectWidth)\n      //     .attr('height', (d) => d)\n      //     .attr('fill', 'tomato')\n      // \n      // this.state.data.forEach(d => {\n      //     // d['points'] = Number(d['points']);\n      //     // d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n      //     console.log(d);\n      // });\n    };\n\n    this.state = {\n      selectedOption: null,\n      chartExists: false,\n      // fade: false\n      data: {\n        \"skill1\": 5,\n        \"skill2\": 8,\n        \"skill3\": 4,\n        \"skill4\": 1,\n        \"skill5\": 9\n      }\n    };\n    this.ref = /*#__PURE__*/React.createRef(); // this.data = [100, 200, 300, 400, 500]\n  } // componentDidMount = () => {\n  //     const size = 400\n  //     var svg = d3.select(this.ref.current)\n  //         .append('svg')\n  //         .attr(\"class\", \"graph\")\n  //         .attr('width', size)\n  //         .attr('height', size);\n  //     const width = svg.attr(\"width\");\n  //     const height = svg.attr(\"height\");\n  //     const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n  //     const chartWidth = width - margin.left - margin.right;\n  //     const chartHeight = height - margin.top - margin.bottom;\n  //     let annotations = svg.append(\"g\").attr(\"id\", \"annotations\");\n  //     let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n  //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  //     let bottomAxis = d3.axisBottom()\n  //     let bottomAxisG = annotations.append(\"g\")\n  //         .attr(\"class\", \"x axis\")\n  //         .attr(\"transform\", `translate(${margin.left},${chartHeight + margin.top + 10})`)\n  //     let leftAxis = d3.axisLeft()\n  //     let leftAxisG = annotations.append(\"g\")\n  //         .attr(\"class\", \"y axis\")\n  //         .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n  // }\n\n\n  render() {\n    const size = 400;\n    var svg = d3.select(this.ref.current).append('svg').attr(\"class\", \"graph\").attr('width', size).attr('height', size);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Search for jobs you're interested in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temp\",\n        children: \"testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skill-search\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          className: \"searchbar\",\n          options: options,\n          isClearable: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary\",\n          onClick: this.onClick,\n          disabled: !this.state.selectedOption // onAnimationEnd={() => this.setState({ fade: false })}\n          // className={fade ? 'fade' : ''}\n          ,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"change1\",\n        onClick: this.onClick2,\n        children: \"change1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        ref: this.ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js"],"names":["React","Component","Select","d3","options","value","label","SkillSearch","constructor","handleChange","selectedOption","setState","console","log","state","onClick","fade","drawChart","onClick2","data","width","svg","attr","height","margin","top","right","bottom","left","chartWidth","chartHeight","annotations","append","chartArea","bottomAxis","axisBottom","bottomAxisG","leftAxis","axisLeft","leftAxisG","res","key","Object","entries","push","skillExtent","map","d","skill","frequencyExtent","extent","frequency","skillScale","scaleBand","domain","range","padding","scale","transition","call","frequencyScale","scaleLinear","selectAll","join","enter","bandwidth","update","exit","remove","chartExists","ref","createRef","render","size","select","current"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\n\nconst options = [\n    { value: 'automation_engineer', label: 'Automation Engineer' },\n    { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n    { value: 'data_analyst', label: 'Data Analyst' },\n    { value: 'data_engineer', label: 'Data Engineer' },\n    { value: 'data_scientist', label: 'Data Scientist' },\n    { value: 'electrical_engineer', label: 'Electrical Engineer' },\n    { value: 'financial_engineer', label: 'Financial Engineer' },\n    { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n    { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n    { value: 'network_engineer', label: 'Network Engineer' },\n    { value: 'qa_engineer', label: 'QA Engineer' },\n    { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n    { value: 'quantitative_finance', label: 'Quantitative Finance' },\n    { value: 'quantitative_research', label: 'Quantitative Research' },\n    { value: 'quantitative_trading', label: 'Quantitative Trading' },\n    { value: 'software_engineer', label: 'Software Engineer' },\n    { value: 'systems_engineer', label: 'Systems Engineer' },\n    { value: 'technology_analyst', label: 'Technology Analyst' }\n]\n\nexport default class SkillSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedOption: null,\n            chartExists: false,\n            // fade: false\n            data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 }\n\n        }\n        this.ref = React.createRef()\n        // this.data = [100, 200, 300, 400, 500]\n    }\n\n    // componentDidMount = () => {\n    //     const size = 400\n\n    //     var svg = d3.select(this.ref.current)\n    //         .append('svg')\n    //         .attr(\"class\", \"graph\")\n    //         .attr('width', size)\n    //         .attr('height', size);\n\n    //     const width = svg.attr(\"width\");\n    //     const height = svg.attr(\"height\");\n\n    //     const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n    //     const chartWidth = width - margin.left - margin.right;\n    //     const chartHeight = height - margin.top - margin.bottom;\n\n    //     let annotations = svg.append(\"g\").attr(\"id\", \"annotations\");\n    //     let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n    //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    //     let bottomAxis = d3.axisBottom()\n    //     let bottomAxisG = annotations.append(\"g\")\n    //         .attr(\"class\", \"x axis\")\n    //         .attr(\"transform\", `translate(${margin.left},${chartHeight + margin.top + 10})`)\n\n    //     let leftAxis = d3.axisLeft()\n    //     let leftAxisG = annotations.append(\"g\")\n    //         .attr(\"class\", \"y axis\")\n    //         .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n    // }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        this.setState({ fade: true });\n        this.drawChart();\n    }\n\n    onClick2 = () => {\n        this.setState({ data: { \"skill5\": 1, \"skill6\": 2, \"skill7\": 3, \"skill8\": 4, \"skill9\": 5 } })\n        console.log(this.state.data)\n        // var svg = d3.select(this.ref.current)\n        // svg.style('display', 'none');\n    }\n\n    drawChart = () => {\n        // d3.json(this.state.data).then(data => {\n        // this.state.data.then(data => {\n        // const svg = d3.select('svg') ? d3.select(this.ref.current) : d3.select(this.ref.current).append('svg')\n        //     .class(\"graph\")\n        //     .attr('width', size).attr('height', size);\n\n        // const size = 400\n\n        // if (this.state.chartExists) {\n        //     console.log(\"exists\");\n        //     var svg = d3.select(this.ref.current);\n        // }\n        // else {\n        //     console.log(\"does not exist\");\n        //     var svg = d3.select(this.ref.current)\n        //         .append('svg')\n        //         .attr(\"class\", \"graph\")\n        //         .attr('width', size)\n        //         .attr('height', size);\n\n        //     this.setState({ chartExists: true })\n        // }\n        // const svg = d3.select(this.ref.current);\n        // .style('display', 'block');\n\n        const width = svg.attr(\"width\");\n        const height = svg.attr(\"height\");\n\n        const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        let annotations = svg.append(\"g\").attr(\"id\", \"annotations\");\n        let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        let bottomAxis = d3.axisBottom()\n        let bottomAxisG = annotations.append(\"g\")\n            .attr(\"class\", \"x axis\")\n            .attr(\"transform\", `translate(${margin.left},${chartHeight + margin.top + 10})`)\n\n        let leftAxis = d3.axisLeft()\n        let leftAxisG = annotations.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n\n        // var skills = []\n        // var frequency = []\n        var res = []\n        for (const [key, value] of Object.entries(this.state.data)) {\n            // skills.push(key);\n            // frequency.push(value);\n            res.push({\n                'skill': key,\n                'frequency': value\n            })\n        }\n        console.log(res)\n\n        // const skillExtent = d3.extent(skills)\n        const skillExtent = d3.map(res, d => d.skill)\n        console.log(skillExtent)\n\n        const frequencyExtent = d3.extent(res, d => d.frequency)\n        console.log(frequencyExtent)\n\n        // const genres = d3.map(data, d => d.genre)\n        const skillScale = d3.scaleBand().domain(skillExtent).range([0, chartWidth])\n            .padding(0.05);\n\n        console.log(skillExtent)\n        bottomAxis.scale(skillScale)\n        bottomAxisG.transition().call(bottomAxis);\n\n        const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([chartHeight, 0]);\n\n        leftAxis.scale(frequencyScale)\n        leftAxisG.transition().call(leftAxis);\n\n        chartArea.selectAll('rect.bar').data(res) // d => d.genre\n            .join(enter => enter.append('rect')\n                .attr('class', 'bar')\n                .attr(\"fill\", \"steelblue\")\n                .attr(\"x\", d => skillScale(d.skill))\n                .attr(\"y\", d => frequencyScale(d.frequency))\n                .attr(\"height\", d => frequencyScale(0) - frequencyScale(d.frequency))\n                .attr(\"width\", skillScale.bandwidth())\n                .attr(\"opacity\", 0) // Set opacity low, then animate to 1 to make them fade in\n                .call(enter => enter.transition().attr('opacity', 1)),\n                update => update.call(update => update.transition()  // Animate resizing and movement\n                    .attr(\"fill\", \"steelblue\")\n                    .attr(\"x\", d => skillScale(d.skill))\n                    .attr(\"y\", d => frequencyScale(d.frequency))\n                    .attr(\"height\", d => frequencyScale(0) - frequencyScale(d.frequency))\n                    .attr(\"width\", skillScale.bandwidth())),\n                exit => exit.call(exit => exit.transition().attr('opacity', 0).remove())); // Animate opacity to fade out\n\n        // const rectWidth = 95\n        // svg.selectAll('rect')\n        //     .data(this.state.data)\n        //     .enter()\n        //     .append('rect')\n        //     .attr('x', (d, i) => 5 + i * (rectWidth + 5))\n        //     .attr('y', (d) => size - d)\n        //     .attr('width', rectWidth)\n        //     .attr('height', (d) => d)\n        //     .attr('fill', 'tomato')\n        // \n        // this.state.data.forEach(d => {\n        //     // d['points'] = Number(d['points']);\n        //     // d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n        //     console.log(d);\n        // });\n\n    }\n\n\n\n    render() {\n        const size = 400;\n        var svg = d3.select(this.ref.current)\n            .append('svg')\n            .attr(\"class\", \"graph\")\n            .attr('width', size)\n            .attr('height', size);\n\n        return (\n            <div className=\"skill-search-container\" >\n                <h1 className=\"title\">Search for jobs you're interested in!</h1>\n                <p className=\"temp\">testing</p>\n                <div className=\"skill-search\">\n                    <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                    <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n                    // onAnimationEnd={() => this.setState({ fade: false })}\n                    // className={fade ? 'fade' : ''}\n                    >Search</button>\n                </div>\n                <button className=\"change1\" onClick={this.onClick2}>change1</button>\n                <div className=\"chart\" ref={this.ref} />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}