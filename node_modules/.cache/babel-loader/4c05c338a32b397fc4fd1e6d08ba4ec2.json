{"ast":null,"code":"var _jsxFileName = \"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'software_engineer',\n  label: 'Software Engineer'\n}, {\n  value: 'mechanical_engineer',\n  label: 'Mechanical Engineer'\n}, {\n  value: 'data_scientist',\n  label: 'Data Scientist'\n}];\nexport default class SkillSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null // fade: false\n\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(this.state.selectedOption); // document.write(`Option selected:`, selectedOption.value); //this prints the selected option\n    };\n\n    this.onClick = () => {\n      console.log(this.state.selectedOption);\n      this.setState({\n        fade: true\n      });\n    };\n  }\n\n  render() {\n    const fade = this.state.fade;\n    const svg = d3.select(\"svg#scatter\");\n    const width = svg.attr(\"width\");\n    const height = svg.attr(\"height\");\n    const margin = {\n      top: 20,\n      right: 10,\n      bottom: 30,\n      left: 35\n    };\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom; // let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n    //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    // d3.json('./wines.json').then(data => {\n    //     data.forEach(d => {\n    //         d['points'] = Number(d['points']);\n    //         d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n    //     });\n    //     data = data.filter((d) => { return d['country'] != \"N/A\" && d['region_1'] != \"\" && d['points'] > 0 && d['points'] < 100; });\n    //     let len_after = data.length\n    //     console.log(len_after)\n    //     const priceExtent = d3.extent(data, d => d['price']);\n    //     const priceScale = d3.scaleLinear().domain(priceExtent).nice().range([0, chartWidth]);\n    //     const pointsExtent = d3.extent(data, d => d['points']);\n    //     const pointsScale = d3.scaleLinear().domain(pointsExtent).range([chartHeight, 0]);\n    //     const stateScale = d3.scaleOrdinal(d3.schemeCategory10);\n    //     let yAxis = d3.axisLeft(pointsScale);\n    //     let yGridlines = d3.axisLeft(pointsScale).tickFormat(\"\").tickSize(-chartWidth - 10);\n    //     svg.append(\"g\").attr(\"class\", \"y axis\")\n    //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n    //         .call(yAxis)\n    //     svg.append(\"g\").attr(\"class\", \"y gridlines\")\n    //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n    //         .call(yGridlines)\n    //     let xAxis = d3.axisBottom(priceScale).tickFormat(d3.format(\"$\"));\n    //     let xGridlines = d3.axisBottom(priceScale).tickFormat(\"\").tickSize(-chartHeight - 10);\n    //     svg.append(\"g\").attr(\"class\", \"x axis\")\n    //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n    //         .call(xAxis)\n    //     svg.append(\"g\").attr(\"class\", \"x gridlines\")\n    //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n    //         .call(xGridlines)\n    //     d3.select(\".axis\").raise()\n    //     data.forEach((d, i) => {\n    //         let circle = chartArea.append(\"circle\")\n    //             .attr(\"cx\", priceScale(d['price']) + jitter())\n    //             .attr(\"cy\", pointsScale(d['points']) + jitter())\n    //             .attr(\"r\", 5)\n    //             .attr(\"fill\", stateScale(d['state']))\n    //             .attr(\"opacity\", 0.8)\n    //             .attr(\"state\", d[\"state\"])\n    //             .attr(\"index\", i);\n    //         circle.on(\"mouseover\", function () {\n    //             d3.select(this).raise()\n    //                 .transition().duration(200)\n    //                 .attr(\"stroke\", \"black\")\n    //                 .attr(\"stroke-width\", 5)\n    //                 .attr(\"r\", 7)\n    //             d3.select(\"#label\").text(d['title']);\n    //         })\n    //         circle.on(\"mouseout\", function () {\n    //             d3.select(this)\n    //                 .transition().duration(200)\n    //                 .attr(\"stroke-width\", 0)\n    //                 .attr(\"r\", 5)\n    //             d3.select(\"#label\").text(\"\");\n    //         })\n    //     });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skill-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Search for jobs you're interested in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"searchbar\",\n        options: options,\n        isClearable: true,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-primary\",\n        onClick: this.onClick // onAnimationEnd={() => this.setState({ fade: false })}\n        // className={fade ? 'fade' : ''}\n        ,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"scatter\",\n        width: \"800\",\n        height: \"500\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          id: \"label\",\n          x: \"790\",\n          y: \"0\",\n          \"text-anchor\": \"end\",\n          \"alignment-baseline\": \"hanging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js"],"names":["React","Component","Select","d3","options","value","label","SkillSearch","state","selectedOption","handleChange","setState","console","log","onClick","fade","render","svg","select","width","attr","height","margin","top","right","bottom","left","chartWidth","chartHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\n\nconst options = [\n    { value: 'software_engineer', label: 'Software Engineer' },\n    { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n    { value: 'data_scientist', label: 'Data Scientist' }\n]\n\nexport default class SkillSearch extends Component {\n    state = {\n        selectedOption: null,\n        // fade: false\n\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n        // document.write(`Option selected:`, selectedOption.value); //this prints the selected option\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        this.setState({ fade: true })\n    }\n\n    render() {\n        const fade = this.state.fade\n\n        const svg = d3.select(\"svg#scatter\");\n\n        const width = svg.attr(\"width\");\n        const height = svg.attr(\"height\");\n\n        const margin = { top: 20, right: 10, bottom: 30, left: 35 };\n        const chartWidth = width - margin.left - margin.right;\n        const chartHeight = height - margin.top - margin.bottom;\n\n        // let chartArea = svg.append(\"g\").attr(\"id\", \"chart\")\n        //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // d3.json('./wines.json').then(data => {\n        //     data.forEach(d => {\n        //         d['points'] = Number(d['points']);\n        //         d['price'] = Number(d['price'].replace(/,/g, \"\").replace(/\\$/g, \"\"));\n        //     });\n\n        //     data = data.filter((d) => { return d['country'] != \"N/A\" && d['region_1'] != \"\" && d['points'] > 0 && d['points'] < 100; });\n        //     let len_after = data.length\n        //     console.log(len_after)\n\n        //     const priceExtent = d3.extent(data, d => d['price']);\n        //     const priceScale = d3.scaleLinear().domain(priceExtent).nice().range([0, chartWidth]);\n        //     const pointsExtent = d3.extent(data, d => d['points']);\n        //     const pointsScale = d3.scaleLinear().domain(pointsExtent).range([chartHeight, 0]);\n        //     const stateScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n        //     let yAxis = d3.axisLeft(pointsScale);\n        //     let yGridlines = d3.axisLeft(pointsScale).tickFormat(\"\").tickSize(-chartWidth - 10);\n\n        //     svg.append(\"g\").attr(\"class\", \"y axis\")\n        //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n        //         .call(yAxis)\n\n        //     svg.append(\"g\").attr(\"class\", \"y gridlines\")\n        //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top) + \")\")\n        //         .call(yGridlines)\n\n        //     let xAxis = d3.axisBottom(priceScale).tickFormat(d3.format(\"$\"));\n        //     let xGridlines = d3.axisBottom(priceScale).tickFormat(\"\").tickSize(-chartHeight - 10);\n\n        //     svg.append(\"g\").attr(\"class\", \"x axis\")\n        //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n        //         .call(xAxis)\n\n        //     svg.append(\"g\").attr(\"class\", \"x gridlines\")\n        //         .attr(\"transform\", \"translate(\" + (margin.left - 10) + \",\" + (margin.top + chartHeight + 10) + \")\")\n        //         .call(xGridlines)\n\n        //     d3.select(\".axis\").raise()\n\n        //     data.forEach((d, i) => {\n        //         let circle = chartArea.append(\"circle\")\n        //             .attr(\"cx\", priceScale(d['price']) + jitter())\n        //             .attr(\"cy\", pointsScale(d['points']) + jitter())\n        //             .attr(\"r\", 5)\n        //             .attr(\"fill\", stateScale(d['state']))\n        //             .attr(\"opacity\", 0.8)\n        //             .attr(\"state\", d[\"state\"])\n        //             .attr(\"index\", i);\n\n\n        //         circle.on(\"mouseover\", function () {\n        //             d3.select(this).raise()\n        //                 .transition().duration(200)\n        //                 .attr(\"stroke\", \"black\")\n        //                 .attr(\"stroke-width\", 5)\n        //                 .attr(\"r\", 7)\n\n        //             d3.select(\"#label\").text(d['title']);\n        //         })\n\n        //         circle.on(\"mouseout\", function () {\n        //             d3.select(this)\n        //                 .transition().duration(200)\n        //                 .attr(\"stroke-width\", 0)\n        //                 .attr(\"r\", 5)\n\n        //             d3.select(\"#label\").text(\"\");\n        //         })\n        //     });\n\n        return (\n            <div className=\"skill-search\" >\n                <h1 className=\"title\">Search for jobs you're interested in!</h1>\n                <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick}\n                // onAnimationEnd={() => this.setState({ fade: false })}\n                // className={fade ? 'fade' : ''}\n                >Search</button>\n                <svg id=\"scatter\" width=\"800\" height=\"500\">\n                    <text id=\"label\" x=\"790\" y=\"0\" text-anchor=\"end\" alignment-baseline=\"hanging\"></text>\n                </svg>\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}