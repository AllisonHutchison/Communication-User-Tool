[{"/Users/daniellesimon/Desktop/Communication-User-Tool/src/index.js":"1","/Users/daniellesimon/Desktop/Communication-User-Tool/src/App.js":"2","/Users/daniellesimon/Desktop/Communication-User-Tool/src/reportWebVitals.js":"3","/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js":"4","/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/ResumeAnalysis.js":"5","/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/About.js":"6"},{"size":500,"mtime":1636346728779,"results":"7","hashOfConfig":"8"},{"size":1909,"mtime":1637565627105,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1636346728780,"results":"10","hashOfConfig":"8"},{"size":8338,"mtime":1637597906759,"results":"11","hashOfConfig":"8"},{"size":157,"mtime":1636385889993,"results":"12","hashOfConfig":"8"},{"size":136,"mtime":1636386243998,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1g0a6zx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/daniellesimon/Desktop/Communication-User-Tool/src/index.js",[],["29","30"],"/Users/daniellesimon/Desktop/Communication-User-Tool/src/App.js",["31","32"],"import './App.css';\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes\n} from 'react-router-dom';\nimport SkillSearch from './components/SkillSearch';\nimport ResumeAnalysis from './components/ResumeAnalysis';\nimport About from './components/About';\n\nfunction App() {\n  let api = 'https://engrc3350-user-app.herokuapp.com/test/';\n  let output;\n\n  fetch(api)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        output = result.result;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-white\">\n          <div class=\"container-fluid\">\n            <h3 class=\"navbar-brand name\" href=\"#\">Communication Skills Tool</h3>\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div class=\"navbar-nav\">\n                <Link to=\"/\" class=\"nav-link\" aria-current=\"page\">Skill Search</Link>\n                <Link to=\"/resume_analysis\" class=\"nav-link\" aria-current=\"page\">Resume Analysis</Link>\n                <Link to=\"/about\" class=\"nav-link\" aria-current=\"page\">About Us</Link>\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <Routes>\n          <Route exact path='/' element={<SkillSearch />}></Route>\n          <Route exact path='/resume_analysis' element={<ResumeAnalysis />}></Route>\n          <Route exact path='/about' element={<About />}></Route>\n        </Routes>\n\n        {/* <p>{output}</p> */}\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/daniellesimon/Desktop/Communication-User-Tool/src/reportWebVitals.js",[],"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/SkillSearch.js",["33","34"],"import React, { Component } from 'react';\nimport Select from 'react-select';\nimport * as d3 from 'd3';\nimport skill_search_pic from '../skill_search_pic.png';\n\nconst options = [\n    { value: 'automation_engineer', label: 'Automation Engineer' },\n    { value: 'computer_hardware_engineer', label: 'Computer Hardware Engineer' },\n    { value: 'data_analyst', label: 'Data Analyst' },\n    { value: 'data_engineer', label: 'Data Engineer' },\n    { value: 'data_scientist', label: 'Data Scientist' },\n    { value: 'electrical_engineer', label: 'Electrical Engineer' },\n    { value: 'financial_engineer', label: 'Financial Engineer' },\n    { value: 'machine_learning_engineer', label: 'Machine Learning Engineer' },\n    { value: 'mechanical_engineer', label: 'Mechanical Engineer' },\n    { value: 'network_engineer', label: 'Network Engineer' },\n    { value: 'qa_engineer', label: 'QA Engineer' },\n    { value: 'quantitative_analyst', label: 'Quantitative Analyst' },\n    { value: 'quantitative_finance', label: 'Quantitative Finance' },\n    { value: 'quantitative_research', label: 'Quantitative Research' },\n    { value: 'quantitative_trading', label: 'Quantitative Trading' },\n    { value: 'software_engineer', label: 'Software Engineer' },\n    { value: 'systems_engineer', label: 'Systems Engineer' },\n    { value: 'technology_analyst', label: 'Technology Analyst' }\n]\n\nexport default class SkillSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedOption: null,\n            chartExists: false,\n\n            data: { \"skill1\": 5, \"skill2\": 8, \"skill3\": 4, \"skill4\": 1, \"skill5\": 9 },\n\n            svg: null,\n            chartWidth: null,\n            chartHeight: null,\n            chartArea: null,\n            bottomAxis: null,\n            bottomAxisG: null,\n            leftAxis: null,\n            leftAxisG: null,\n\n            skills: [],\n            score: 0\n            // fade: false\n            // data: { \"skill1\": 5, \"skill2\": 8 }\n\n        }\n        this.ref = React.createRef()\n    }\n\n    handleChange = (selectedOption) => {\n        this.setState({ selectedOption });\n        console.log(this.state.selectedOption);\n    }\n\n\n    onClick = () => {\n        console.log(this.state.selectedOption);\n        d3.select('.skill-search_pic').style('display', 'none');\n        d3.select('.graph').style('display', 'inline');\n        this.drawChart();\n    }\n\n    getSkills(keyword) {\n        fetch('/skills?keyword=' + keyword).then(res => res.json()).then(output => {\n            this.setState({ skills: output });\n        })\n    }\n\n    getScore(keyword, resume = null) {\n        let str = '/score?keyword=' + keyword ? resume : '/score?keyword=' + keyword + '&resume=' + resume;;\n\n        fetch(str).then(res => res.json()).then(output => {\n            this.setState({ score: output.score })\n            this.setState({ skills: output.skills })\n        })\n    }\n\n    // ///////////////\n    getRandomInt = () => {\n        return Math.floor(Math.random() * 10);\n    }\n\n    onClick2 = () => {\n        this.setState({ data: { \"skill5\": this.getRandomInt(), \"skill6\": this.getRandomInt(), \"skill7\": this.getRandomInt(), \"skill8\": this.getRandomInt(), \"skill9\": this.getRandomInt() } })\n        console.log(this.state.data)\n        // var svg = d3.select(this.ref.current)\n        // svg.style('display', 'none');\n    }\n    // ///////////////\n\n    componentDidMount = () => {\n\n        this.state.svg = d3.select(this.ref.current)\n            .append('svg')\n            .attr(\"class\", \"graph\")\n            .attr('width', 800)\n            .attr('height', 350)\n            .style('display', 'none');\n\n        const width = this.state.svg.attr('width');\n        const height = this.state.svg.attr('height');\n\n        const margin = { top: 20, right: 10, bottom: 40, left: 100 };\n        this.setState({ chartWidth: width - margin.left - margin.right });\n        this.setState({ chartHeight: height - margin.top - margin.bottom });\n\n        const annotations = this.state.svg.append(\"g\").attr(\"id\", \"annotations\");\n        this.setState({\n            chartArea: this.state.svg.append(\"g\").attr(\"id\", \"chart\")\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n        });\n\n        this.setState({ bottomAxis: d3.axisBottom() });\n        this.setState({\n            bottomAxisG: annotations.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", `translate(${margin.left},${300 + margin.top})`)\n        });\n\n        this.setState({ leftAxis: d3.axisLeft() });\n        this.setState({\n            leftAxisG: annotations.append(\"g\")\n                .attr(\"class\", \"y axis\")\n                .attr(\"transform\", `translate(${margin.left - 10},${margin.top})`)\n        });\n\n    }\n\n    drawChart = () => {\n        var res = []\n        var i = 1.1\n        for (const [key, value] of Object.entries(this.state.data)) {\n            i = i - .15\n            res.push({\n                'skill': key,\n                'frequency': value,\n                'opacity': i\n            })\n        }\n\n        const skillExtent = d3.map(res, d => d.skill)\n\n        const frequencyExtent = [0, d3.max(res, d => d.frequency)]\n\n        const skillScale = d3.scaleBand().domain(skillExtent).range([0, this.state.chartHeight])\n            .padding(0.05);\n\n\n        this.state.leftAxis.scale(skillScale).tickSize(0);\n        this.state.leftAxisG.transition().call(this.state.leftAxis);\n\n        const frequencyScale = d3.scaleLinear().domain(frequencyExtent).range([0, this.state.chartWidth]);\n\n        this.state.chartArea.selectAll('rect.bar').data(res)\n            .join(enter => enter.append('rect')\n                .attr('class', 'bar')\n                .attr(\"fill\", \"#FFC85C\")\n                .attr(\"x\", d => 0)\n                .attr(\"y\", d => skillScale(d.skill))\n                .attr(\"width\", d => frequencyScale(d.frequency))\n                .attr(\"height\", skillScale.bandwidth())\n                .attr(\"opacity\", d => d.opacity),\n                update => update.call(update => update.transition()\n                    .attr(\"fill\", \"#FFC85C\")\n                    .attr(\"x\", d => 0)\n                    .attr(\"y\", d => skillScale(d.skill))\n                    .attr(\"width\", d => frequencyScale(d.frequency))\n                    .attr(\"height\", skillScale.bandwidth()))\n                    .attr(\"opacity\", d => d.opacity));\n\n        this.state.chartArea.selectAll('text.label').data(res)\n            .join(enter => enter.append('text')\n                .attr('class', 'label')\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"font-size\", \"15px\")\n                .attr(\"x\", d => frequencyScale(d.frequency) - 10)\n                .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                .text(d => {\n                    if (d.frequency === 0) { return \"\"; }\n                    else { return d.frequency; }\n                }),\n                update => update.call(update => update.transition()\n                    .attr('class', 'label')\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"font-size\", \"15px\")\n                    .attr(\"x\", d => frequencyScale(d.frequency) - 10)\n                    .attr('y', d => skillScale(d.skill) + skillScale.bandwidth() / 2 + 5)\n                    .text(d => {\n                        if (d.frequency === 0) { return \"\"; }\n                        else { return d.frequency; }\n                    })));\n    }\n\n    render() {\n\n        return (\n            <div className=\"skill-search-container\" >\n                <h1 className=\"title\">Search for Jobs You're Interested In!</h1>\n                <div className=\"skill-search\">\n                    <Select className=\"searchbar\" options={options} isClearable={true} onChange={this.handleChange} />\n                    <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.onClick} disabled={!this.state.selectedOption}\n                    >Search</button>\n                </div>\n                <button className=\"change1\" onClick={this.onClick2}>change1</button>\n                <center><img src={skill_search_pic} className=\"skill-search_pic\" alt=\"skill search picture\" /></center>\n                <div className=\"chart\" ref={this.ref} />\n            </div>\n        )\n    }\n}","/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/ResumeAnalysis.js",[],"/Users/daniellesimon/Desktop/Communication-User-Tool/src/components/About.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":17,"nodeType":"41","messageId":"42","endLine":2,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":21,"column":9,"nodeType":"41","messageId":"42","endLine":21,"endColumn":15},{"ruleId":"44","severity":1,"message":"45","line":97,"column":9,"nodeType":"46","endLine":97,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":209,"column":25,"nodeType":"49","endLine":209,"endColumn":111},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'output' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]